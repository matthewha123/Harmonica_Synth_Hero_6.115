ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPIM_1_initVar
  20              		.bss
  21              		.type	SPIM_1_initVar, %object
  22              		.size	SPIM_1_initVar, 1
  23              	SPIM_1_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPIM_1_swStatusTx,1,1
  26              		.comm	SPIM_1_swStatusRx,1,1
  27              		.section	.text.SPIM_1_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPIM_1_Init
  30              		.thumb
  31              		.thumb_func
  32              		.type	SPIM_1_Init, %function
  33              	SPIM_1_Init:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\SPIM_1.c"
   1:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIM_1.c **** * File Name: SPIM_1.c
   3:Generated_Source\PSoC5/SPIM_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPIM_1.c **** *
   5:Generated_Source\PSoC5/SPIM_1.c **** * Description:
   6:Generated_Source\PSoC5/SPIM_1.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPIM_1.c **** *
   8:Generated_Source\PSoC5/SPIM_1.c **** * Note:
   9:Generated_Source\PSoC5/SPIM_1.c **** *  None.
  10:Generated_Source\PSoC5/SPIM_1.c **** *
  11:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIM_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPIM_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIM_1.c **** 
  18:Generated_Source\PSoC5/SPIM_1.c **** #include "SPIM_1_PVT.h"
  19:Generated_Source\PSoC5/SPIM_1.c **** 
  20:Generated_Source\PSoC5/SPIM_1.c **** #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferFull;
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 2


  23:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferRead;
  24:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_txBufferWrite;
  25:Generated_Source\PSoC5/SPIM_1.c **** #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPIM_1.c **** 
  27:Generated_Source\PSoC5/SPIM_1.c **** #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferFull;
  30:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferRead;
  31:Generated_Source\PSoC5/SPIM_1.c ****     volatile uint8 SPIM_1_rxBufferWrite;
  32:Generated_Source\PSoC5/SPIM_1.c **** #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPIM_1.c **** 
  34:Generated_Source\PSoC5/SPIM_1.c **** uint8 SPIM_1_initVar = 0u;
  35:Generated_Source\PSoC5/SPIM_1.c **** 
  36:Generated_Source\PSoC5/SPIM_1.c **** volatile uint8 SPIM_1_swStatusTx;
  37:Generated_Source\PSoC5/SPIM_1.c **** volatile uint8 SPIM_1_swStatusRx;
  38:Generated_Source\PSoC5/SPIM_1.c **** 
  39:Generated_Source\PSoC5/SPIM_1.c **** 
  40:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_Init
  42:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPIM_1.c **** *
  44:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
  45:Generated_Source\PSoC5/SPIM_1.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPIM_1.c **** *
  47:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
  48:Generated_Source\PSoC5/SPIM_1.c **** *  None.
  49:Generated_Source\PSoC5/SPIM_1.c **** *
  50:Generated_Source\PSoC5/SPIM_1.c **** * Return:
  51:Generated_Source\PSoC5/SPIM_1.c **** *  None.
  52:Generated_Source\PSoC5/SPIM_1.c **** *
  53:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPIM_1.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPIM_1.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPIM_1.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPIM_1.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPIM_1.c **** *
  59:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPIM_1.c **** *  No.
  61:Generated_Source\PSoC5/SPIM_1.c **** *
  62:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_Init(void) 
  64:Generated_Source\PSoC5/SPIM_1.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC5/SPIM_1.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_COUNTER_PERIOD_REG = SPIM_1_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 084B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC5/SPIM_1.c **** 
  68:Generated_Source\PSoC5/SPIM_1.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPIM_1.c ****         CyIntDisable         (SPIM_1_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPIM_1.c ****         CyIntSetPriority     (SPIM_1_TX_ISR_NUMBER,  SPIM_1_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPIM_1.c ****         (void) CyIntSetVector(SPIM_1_TX_ISR_NUMBER, &SPIM_1_TX_ISR);
  73:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPIM_1.c **** 
  75:Generated_Source\PSoC5/SPIM_1.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPIM_1.c ****         CyIntDisable         (SPIM_1_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPIM_1.c ****         CyIntSetPriority     (SPIM_1_RX_ISR_NUMBER,  SPIM_1_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPIM_1.c ****         (void) CyIntSetVector(SPIM_1_RX_ISR_NUMBER, &SPIM_1_RX_ISR);
  80:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPIM_1.c **** 
  82:Generated_Source\PSoC5/SPIM_1.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_ClearFIFO();
  50              		.loc 1 83 0
  51 000a FFF7FEFF 		bl	SPIM_1_ClearFIFO
  84:Generated_Source\PSoC5/SPIM_1.c **** 
  85:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_rxBufferRead  = 0u;
  88:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPIM_1.c **** 
  91:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPIM_1.c **** 
  97:Generated_Source\PSoC5/SPIM_1.c ****     (void) SPIM_1_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  52              		.loc 1 97 0
  53 000e FFF7FEFF 		bl	SPIM_1_ReadTxStatus
  98:Generated_Source\PSoC5/SPIM_1.c ****     (void) SPIM_1_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  54              		.loc 1 98 0
  55 0012 FFF7FEFF 		bl	SPIM_1_ReadRxStatus
  99:Generated_Source\PSoC5/SPIM_1.c **** 
 100:Generated_Source\PSoC5/SPIM_1.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG = SPIM_1_TX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 101 0
  57 0016 054B     		ldr	r3, .L2+4
  58 0018 0022     		movs	r2, #0
  59 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG = SPIM_1_RX_INIT_INTERRUPTS_MASK;
  60              		.loc 1 102 0
  61 001c 044B     		ldr	r3, .L2+8
  62 001e 0022     		movs	r2, #0
  63 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPIM_1.c **** }
  64              		.loc 1 103 0
  65 0022 00BF     		nop
  66 0024 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0026 00BF     		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 4


  69              	.L2:
  70 0028 81640040 		.word	1073767553
  71 002c 82640040 		.word	1073767554
  72 0030 85640040 		.word	1073767557
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	SPIM_1_Init, .-SPIM_1_Init
  76              		.section	.text.SPIM_1_Enable,"ax",%progbits
  77              		.align	2
  78              		.global	SPIM_1_Enable
  79              		.thumb
  80              		.thumb_func
  81              		.type	SPIM_1_Enable, %function
  82              	SPIM_1_Enable:
  83              	.LFB1:
 104:Generated_Source\PSoC5/SPIM_1.c **** 
 105:Generated_Source\PSoC5/SPIM_1.c **** 
 106:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_Enable
 108:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPIM_1.c **** *
 110:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 111:Generated_Source\PSoC5/SPIM_1.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPIM_1.c **** *
 113:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 114:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 115:Generated_Source\PSoC5/SPIM_1.c **** *
 116:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 117:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 118:Generated_Source\PSoC5/SPIM_1.c **** *
 119:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_Enable(void) 
 121:Generated_Source\PSoC5/SPIM_1.c **** {
  84              		.loc 1 121 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 82B0     		sub	sp, sp, #8
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/SPIM_1.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPIM_1.c **** 
 124:Generated_Source\PSoC5/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  96              		.loc 1 124 0
  97 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  98 000a 0346     		mov	r3, r0
  99 000c FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_COUNTER_CONTROL_REG |= SPIM_1_CNTR_ENABLE;
 100              		.loc 1 125 0
 101 000e 134A     		ldr	r2, .L5
 102 0010 124B     		ldr	r3, .L5
 103 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 5


 104 0014 DBB2     		uxtb	r3, r3
 105 0016 43F02003 		orr	r3, r3, #32
 106 001a DBB2     		uxtb	r3, r3
 107 001c 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_TX_STATUS_ACTL_REG  |= SPIM_1_INT_ENABLE;
 108              		.loc 1 126 0
 109 001e 104A     		ldr	r2, .L5+4
 110 0020 0F4B     		ldr	r3, .L5+4
 111 0022 1B78     		ldrb	r3, [r3]
 112 0024 DBB2     		uxtb	r3, r3
 113 0026 43F01003 		orr	r3, r3, #16
 114 002a DBB2     		uxtb	r3, r3
 115 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_RX_STATUS_ACTL_REG  |= SPIM_1_INT_ENABLE;
 116              		.loc 1 127 0
 117 002e 0D4A     		ldr	r2, .L5+8
 118 0030 0C4B     		ldr	r3, .L5+8
 119 0032 1B78     		ldrb	r3, [r3]
 120 0034 DBB2     		uxtb	r3, r3
 121 0036 43F01003 		orr	r3, r3, #16
 122 003a DBB2     		uxtb	r3, r3
 123 003c 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 126 0040 1846     		mov	r0, r3
 127 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC5/SPIM_1.c **** 
 130:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_IntClock_Enable();
 128              		.loc 1 131 0
 129 0046 FFF7FEFF 		bl	SPIM_1_IntClock_Start
 132:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPIM_1.c **** 
 134:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_EnableTxInt();
 130              		.loc 1 134 0
 131 004a FFF7FEFF 		bl	SPIM_1_EnableTxInt
 135:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_EnableRxInt();
 132              		.loc 1 135 0
 133 004e FFF7FEFF 		bl	SPIM_1_EnableRxInt
 136:Generated_Source\PSoC5/SPIM_1.c **** }
 134              		.loc 1 136 0
 135 0052 00BF     		nop
 136 0054 0837     		adds	r7, r7, #8
 137              		.cfi_def_cfa_offset 8
 138 0056 BD46     		mov	sp, r7
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 0058 80BD     		pop	{r7, pc}
 142              	.L6:
 143 005a 00BF     		.align	2
 144              	.L5:
 145 005c 91640040 		.word	1073767569
 146 0060 92640040 		.word	1073767570
 147 0064 95640040 		.word	1073767573
 148              		.cfi_endproc
 149              	.LFE1:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 6


 150              		.size	SPIM_1_Enable, .-SPIM_1_Enable
 151              		.section	.text.SPIM_1_Start,"ax",%progbits
 152              		.align	2
 153              		.global	SPIM_1_Start
 154              		.thumb
 155              		.thumb_func
 156              		.type	SPIM_1_Start, %function
 157              	SPIM_1_Start:
 158              	.LFB2:
 137:Generated_Source\PSoC5/SPIM_1.c **** 
 138:Generated_Source\PSoC5/SPIM_1.c **** 
 139:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_Start
 141:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPIM_1.c **** *
 143:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 144:Generated_Source\PSoC5/SPIM_1.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPIM_1.c **** *
 146:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 147:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 148:Generated_Source\PSoC5/SPIM_1.c **** *
 149:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 150:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 151:Generated_Source\PSoC5/SPIM_1.c **** *
 152:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 153:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPIM_1.c **** *  first function call.
 155:Generated_Source\PSoC5/SPIM_1.c **** *
 156:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 157:Generated_Source\PSoC5/SPIM_1.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPIM_1.c **** *
 159:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 161:Generated_Source\PSoC5/SPIM_1.c **** *
 162:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_Start(void) 
 164:Generated_Source\PSoC5/SPIM_1.c **** {
 159              		.loc 1 164 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/SPIM_1.c ****     if(0u == SPIM_1_initVar)
 169              		.loc 1 165 0
 170 0004 064B     		ldr	r3, .L9
 171 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 172 0008 002B     		cmp	r3, #0
 173 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC5/SPIM_1.c ****     {
 167:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_Init();
 174              		.loc 1 167 0
 175 000c FFF7FEFF 		bl	SPIM_1_Init
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 7


 168:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_initVar = 1u;
 176              		.loc 1 168 0
 177 0010 034B     		ldr	r3, .L9
 178 0012 0122     		movs	r2, #1
 179 0014 1A70     		strb	r2, [r3]
 180              	.L8:
 169:Generated_Source\PSoC5/SPIM_1.c ****     }
 170:Generated_Source\PSoC5/SPIM_1.c **** 
 171:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_Enable();
 181              		.loc 1 171 0
 182 0016 FFF7FEFF 		bl	SPIM_1_Enable
 172:Generated_Source\PSoC5/SPIM_1.c **** }
 183              		.loc 1 172 0
 184 001a 00BF     		nop
 185 001c 80BD     		pop	{r7, pc}
 186              	.L10:
 187 001e 00BF     		.align	2
 188              	.L9:
 189 0020 00000000 		.word	SPIM_1_initVar
 190              		.cfi_endproc
 191              	.LFE2:
 192              		.size	SPIM_1_Start, .-SPIM_1_Start
 193              		.section	.text.SPIM_1_Stop,"ax",%progbits
 194              		.align	2
 195              		.global	SPIM_1_Stop
 196              		.thumb
 197              		.thumb_func
 198              		.type	SPIM_1_Stop, %function
 199              	SPIM_1_Stop:
 200              	.LFB3:
 173:Generated_Source\PSoC5/SPIM_1.c **** 
 174:Generated_Source\PSoC5/SPIM_1.c **** 
 175:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_Stop
 177:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPIM_1.c **** *
 179:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 180:Generated_Source\PSoC5/SPIM_1.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPIM_1.c **** *
 182:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 183:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 184:Generated_Source\PSoC5/SPIM_1.c **** *
 185:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 186:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 187:Generated_Source\PSoC5/SPIM_1.c **** *
 188:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 189:Generated_Source\PSoC5/SPIM_1.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPIM_1.c **** *
 191:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_Stop(void) 
 193:Generated_Source\PSoC5/SPIM_1.c **** {
 201              		.loc 1 193 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 8


 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC5/SPIM_1.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPIM_1.c **** 
 196:Generated_Source\PSoC5/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 213              		.loc 1 196 0
 214 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 215 000a 0346     		mov	r3, r0
 216 000c FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_1_INT_ENABLE);
 217              		.loc 1 197 0
 218 000e 0F4A     		ldr	r2, .L12
 219 0010 0E4B     		ldr	r3, .L12
 220 0012 1B78     		ldrb	r3, [r3]
 221 0014 DBB2     		uxtb	r3, r3
 222 0016 23F01003 		bic	r3, r3, #16
 223 001a DBB2     		uxtb	r3, r3
 224 001c 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_1_INT_ENABLE);
 225              		.loc 1 198 0
 226 001e 0C4A     		ldr	r2, .L12+4
 227 0020 0B4B     		ldr	r3, .L12+4
 228 0022 1B78     		ldrb	r3, [r3]
 229 0024 DBB2     		uxtb	r3, r3
 230 0026 23F01003 		bic	r3, r3, #16
 231 002a DBB2     		uxtb	r3, r3
 232 002c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 233              		.loc 1 199 0
 234 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 235 0030 1846     		mov	r0, r3
 236 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC5/SPIM_1.c **** 
 201:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_IntClock_Disable();
 237              		.loc 1 202 0
 238 0036 FFF7FEFF 		bl	SPIM_1_IntClock_Stop
 203:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPIM_1.c **** 
 205:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_DisableTxInt();
 239              		.loc 1 205 0
 240 003a FFF7FEFF 		bl	SPIM_1_DisableTxInt
 206:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_DisableRxInt();
 241              		.loc 1 206 0
 242 003e FFF7FEFF 		bl	SPIM_1_DisableRxInt
 207:Generated_Source\PSoC5/SPIM_1.c **** }
 243              		.loc 1 207 0
 244 0042 00BF     		nop
 245 0044 0837     		adds	r7, r7, #8
 246              		.cfi_def_cfa_offset 8
 247 0046 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 9


 250 0048 80BD     		pop	{r7, pc}
 251              	.L13:
 252 004a 00BF     		.align	2
 253              	.L12:
 254 004c 92640040 		.word	1073767570
 255 0050 95640040 		.word	1073767573
 256              		.cfi_endproc
 257              	.LFE3:
 258              		.size	SPIM_1_Stop, .-SPIM_1_Stop
 259              		.section	.text.SPIM_1_EnableTxInt,"ax",%progbits
 260              		.align	2
 261              		.global	SPIM_1_EnableTxInt
 262              		.thumb
 263              		.thumb_func
 264              		.type	SPIM_1_EnableTxInt, %function
 265              	SPIM_1_EnableTxInt:
 266              	.LFB4:
 208:Generated_Source\PSoC5/SPIM_1.c **** 
 209:Generated_Source\PSoC5/SPIM_1.c **** 
 210:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_EnableTxInt
 212:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPIM_1.c **** *
 214:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 215:Generated_Source\PSoC5/SPIM_1.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPIM_1.c **** *
 217:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 218:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 219:Generated_Source\PSoC5/SPIM_1.c **** *
 220:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 221:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 222:Generated_Source\PSoC5/SPIM_1.c **** *
 223:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 224:Generated_Source\PSoC5/SPIM_1.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPIM_1.c **** *
 226:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPIM_1.c **** {
 267              		.loc 1 228 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272 0000 80B4     		push	{r7}
 273              		.cfi_def_cfa_offset 4
 274              		.cfi_offset 7, -4
 275 0002 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPIM_1.c ****         CyIntEnable(SPIM_1_TX_ISR_NUMBER);
 231:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPIM_1.c **** }
 277              		.loc 1 232 0
 278 0004 00BF     		nop
 279 0006 BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 10


 282 0008 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 000a 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE4:
 288              		.size	SPIM_1_EnableTxInt, .-SPIM_1_EnableTxInt
 289              		.section	.text.SPIM_1_EnableRxInt,"ax",%progbits
 290              		.align	2
 291              		.global	SPIM_1_EnableRxInt
 292              		.thumb
 293              		.thumb_func
 294              		.type	SPIM_1_EnableRxInt, %function
 295              	SPIM_1_EnableRxInt:
 296              	.LFB5:
 233:Generated_Source\PSoC5/SPIM_1.c **** 
 234:Generated_Source\PSoC5/SPIM_1.c **** 
 235:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_EnableRxInt
 237:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPIM_1.c **** *
 239:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 240:Generated_Source\PSoC5/SPIM_1.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPIM_1.c **** *
 242:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 243:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 244:Generated_Source\PSoC5/SPIM_1.c **** *
 245:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 246:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 247:Generated_Source\PSoC5/SPIM_1.c **** *
 248:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 249:Generated_Source\PSoC5/SPIM_1.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPIM_1.c **** *
 251:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPIM_1.c **** {
 297              		.loc 1 253 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 7, -4
 305 0002 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPIM_1.c ****         CyIntEnable(SPIM_1_RX_ISR_NUMBER);
 256:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPIM_1.c **** }
 307              		.loc 1 257 0
 308 0004 00BF     		nop
 309 0006 BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 0008 80BC     		pop	{r7}
 313              		.cfi_restore 7
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 11


 314              		.cfi_def_cfa_offset 0
 315 000a 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE5:
 318              		.size	SPIM_1_EnableRxInt, .-SPIM_1_EnableRxInt
 319              		.section	.text.SPIM_1_DisableTxInt,"ax",%progbits
 320              		.align	2
 321              		.global	SPIM_1_DisableTxInt
 322              		.thumb
 323              		.thumb_func
 324              		.type	SPIM_1_DisableTxInt, %function
 325              	SPIM_1_DisableTxInt:
 326              	.LFB6:
 258:Generated_Source\PSoC5/SPIM_1.c **** 
 259:Generated_Source\PSoC5/SPIM_1.c **** 
 260:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_DisableTxInt
 262:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPIM_1.c **** *
 264:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 265:Generated_Source\PSoC5/SPIM_1.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPIM_1.c **** *
 267:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 268:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 269:Generated_Source\PSoC5/SPIM_1.c **** *
 270:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 271:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 272:Generated_Source\PSoC5/SPIM_1.c **** *
 273:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 274:Generated_Source\PSoC5/SPIM_1.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPIM_1.c **** *
 276:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPIM_1.c **** {
 327              		.loc 1 278 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332 0000 80B4     		push	{r7}
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 7, -4
 335 0002 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPIM_1.c ****         CyIntDisable(SPIM_1_TX_ISR_NUMBER);
 281:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPIM_1.c **** }
 337              		.loc 1 282 0
 338 0004 00BF     		nop
 339 0006 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 0008 80BC     		pop	{r7}
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 000a 7047     		bx	lr
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 12


 346              		.cfi_endproc
 347              	.LFE6:
 348              		.size	SPIM_1_DisableTxInt, .-SPIM_1_DisableTxInt
 349              		.section	.text.SPIM_1_DisableRxInt,"ax",%progbits
 350              		.align	2
 351              		.global	SPIM_1_DisableRxInt
 352              		.thumb
 353              		.thumb_func
 354              		.type	SPIM_1_DisableRxInt, %function
 355              	SPIM_1_DisableRxInt:
 356              	.LFB7:
 283:Generated_Source\PSoC5/SPIM_1.c **** 
 284:Generated_Source\PSoC5/SPIM_1.c **** 
 285:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_DisableRxInt
 287:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPIM_1.c **** *
 289:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 290:Generated_Source\PSoC5/SPIM_1.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPIM_1.c **** *
 292:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 293:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 294:Generated_Source\PSoC5/SPIM_1.c **** *
 295:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 296:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 297:Generated_Source\PSoC5/SPIM_1.c **** *
 298:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 299:Generated_Source\PSoC5/SPIM_1.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPIM_1.c **** *
 301:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPIM_1.c **** {
 357              		.loc 1 303 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 80B4     		push	{r7}
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 7, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SPIM_1.c ****     #if(0u != SPIM_1_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPIM_1.c ****         CyIntDisable(SPIM_1_RX_ISR_NUMBER);
 306:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (0u != SPIM_1_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPIM_1.c **** }
 367              		.loc 1 307 0
 368 0004 00BF     		nop
 369 0006 BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 0008 80BC     		pop	{r7}
 373              		.cfi_restore 7
 374              		.cfi_def_cfa_offset 0
 375 000a 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE7:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 13


 378              		.size	SPIM_1_DisableRxInt, .-SPIM_1_DisableRxInt
 379              		.section	.text.SPIM_1_SetTxInterruptMode,"ax",%progbits
 380              		.align	2
 381              		.global	SPIM_1_SetTxInterruptMode
 382              		.thumb
 383              		.thumb_func
 384              		.type	SPIM_1_SetTxInterruptMode, %function
 385              	SPIM_1_SetTxInterruptMode:
 386              	.LFB8:
 308:Generated_Source\PSoC5/SPIM_1.c **** 
 309:Generated_Source\PSoC5/SPIM_1.c **** 
 310:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPIM_1.c **** *
 314:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 315:Generated_Source\PSoC5/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPIM_1.c **** *
 317:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 318:Generated_Source\PSoC5/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPIM_1.c **** *  header file).
 320:Generated_Source\PSoC5/SPIM_1.c **** *
 321:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 322:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 323:Generated_Source\PSoC5/SPIM_1.c **** *
 324:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 325:Generated_Source\PSoC5/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPIM_1.c **** *
 327:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPIM_1.c **** {
 387              		.loc 1 329 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392 0000 80B4     		push	{r7}
 393              		.cfi_def_cfa_offset 4
 394              		.cfi_offset 7, -4
 395 0002 83B0     		sub	sp, sp, #12
 396              		.cfi_def_cfa_offset 16
 397 0004 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
 399 0006 0346     		mov	r3, r0
 400 0008 FB71     		strb	r3, [r7, #7]
 330:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG = intSrc;
 401              		.loc 1 330 0
 402 000a 044A     		ldr	r2, .L19
 403 000c FB79     		ldrb	r3, [r7, #7]
 404 000e 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC5/SPIM_1.c **** }
 405              		.loc 1 331 0
 406 0010 00BF     		nop
 407 0012 0C37     		adds	r7, r7, #12
 408              		.cfi_def_cfa_offset 4
 409 0014 BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 14


 411              		@ sp needed
 412 0016 80BC     		pop	{r7}
 413              		.cfi_restore 7
 414              		.cfi_def_cfa_offset 0
 415 0018 7047     		bx	lr
 416              	.L20:
 417 001a 00BF     		.align	2
 418              	.L19:
 419 001c 82640040 		.word	1073767554
 420              		.cfi_endproc
 421              	.LFE8:
 422              		.size	SPIM_1_SetTxInterruptMode, .-SPIM_1_SetTxInterruptMode
 423              		.section	.text.SPIM_1_SetRxInterruptMode,"ax",%progbits
 424              		.align	2
 425              		.global	SPIM_1_SetRxInterruptMode
 426              		.thumb
 427              		.thumb_func
 428              		.type	SPIM_1_SetRxInterruptMode, %function
 429              	SPIM_1_SetRxInterruptMode:
 430              	.LFB9:
 332:Generated_Source\PSoC5/SPIM_1.c **** 
 333:Generated_Source\PSoC5/SPIM_1.c **** 
 334:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPIM_1.c **** *
 338:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 339:Generated_Source\PSoC5/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPIM_1.c **** *
 341:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 342:Generated_Source\PSoC5/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPIM_1.c **** *  header file).
 344:Generated_Source\PSoC5/SPIM_1.c **** *
 345:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 346:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 347:Generated_Source\PSoC5/SPIM_1.c **** *
 348:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 349:Generated_Source\PSoC5/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPIM_1.c **** *
 351:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPIM_1.c **** {
 431              		.loc 1 353 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0002 83B0     		sub	sp, sp, #12
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 443 0006 0346     		mov	r3, r0
 444 0008 FB71     		strb	r3, [r7, #7]
 354:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG  = intSrc;
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 15


 445              		.loc 1 354 0
 446 000a 044A     		ldr	r2, .L22
 447 000c FB79     		ldrb	r3, [r7, #7]
 448 000e 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/SPIM_1.c **** }
 449              		.loc 1 355 0
 450 0010 00BF     		nop
 451 0012 0C37     		adds	r7, r7, #12
 452              		.cfi_def_cfa_offset 4
 453 0014 BD46     		mov	sp, r7
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 0016 80BC     		pop	{r7}
 457              		.cfi_restore 7
 458              		.cfi_def_cfa_offset 0
 459 0018 7047     		bx	lr
 460              	.L23:
 461 001a 00BF     		.align	2
 462              	.L22:
 463 001c 85640040 		.word	1073767557
 464              		.cfi_endproc
 465              	.LFE9:
 466              		.size	SPIM_1_SetRxInterruptMode, .-SPIM_1_SetRxInterruptMode
 467              		.section	.text.SPIM_1_ReadTxStatus,"ax",%progbits
 468              		.align	2
 469              		.global	SPIM_1_ReadTxStatus
 470              		.thumb
 471              		.thumb_func
 472              		.type	SPIM_1_ReadTxStatus, %function
 473              	SPIM_1_ReadTxStatus:
 474              	.LFB10:
 356:Generated_Source\PSoC5/SPIM_1.c **** 
 357:Generated_Source\PSoC5/SPIM_1.c **** 
 358:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ReadTxStatus
 360:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPIM_1.c **** *
 362:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 363:Generated_Source\PSoC5/SPIM_1.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPIM_1.c **** *
 365:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 366:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 367:Generated_Source\PSoC5/SPIM_1.c **** *
 368:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 369:Generated_Source\PSoC5/SPIM_1.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPIM_1.c **** *
 371:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 372:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPIM_1.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPIM_1.c **** *
 375:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 376:Generated_Source\PSoC5/SPIM_1.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPIM_1.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPIM_1.c **** *
 379:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPIM_1.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPIM_1.c **** *
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 16


 382:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 384:Generated_Source\PSoC5/SPIM_1.c **** *
 385:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPIM_1.c **** uint8 SPIM_1_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPIM_1.c **** {
 475              		.loc 1 387 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              		.cfi_def_cfa_offset 4
 482              		.cfi_offset 7, -4
 483 0002 83B0     		sub	sp, sp, #12
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC5/SPIM_1.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPIM_1.c **** 
 390:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableTxInt();
 393:Generated_Source\PSoC5/SPIM_1.c **** 
 394:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
 395:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPIM_1.c **** 
 397:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableTxInt();
 398:Generated_Source\PSoC5/SPIM_1.c **** 
 399:Generated_Source\PSoC5/SPIM_1.c ****     #else
 400:Generated_Source\PSoC5/SPIM_1.c **** 
 401:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus = SPIM_1_TX_STATUS_REG;
 487              		.loc 1 401 0
 488 0006 044B     		ldr	r3, .L26
 489 0008 1B78     		ldrb	r3, [r3]
 490 000a FB71     		strb	r3, [r7, #7]
 402:Generated_Source\PSoC5/SPIM_1.c **** 
 403:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPIM_1.c **** 
 405:Generated_Source\PSoC5/SPIM_1.c ****     return(tmpStatus);
 491              		.loc 1 405 0
 492 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/SPIM_1.c **** }
 493              		.loc 1 406 0
 494 000e 1846     		mov	r0, r3
 495 0010 0C37     		adds	r7, r7, #12
 496              		.cfi_def_cfa_offset 4
 497 0012 BD46     		mov	sp, r7
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0014 80BC     		pop	{r7}
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 0016 7047     		bx	lr
 504              	.L27:
 505              		.align	2
 506              	.L26:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 17


 507 0018 62640040 		.word	1073767522
 508              		.cfi_endproc
 509              	.LFE10:
 510              		.size	SPIM_1_ReadTxStatus, .-SPIM_1_ReadTxStatus
 511              		.section	.text.SPIM_1_ReadRxStatus,"ax",%progbits
 512              		.align	2
 513              		.global	SPIM_1_ReadRxStatus
 514              		.thumb
 515              		.thumb_func
 516              		.type	SPIM_1_ReadRxStatus, %function
 517              	SPIM_1_ReadRxStatus:
 518              	.LFB11:
 407:Generated_Source\PSoC5/SPIM_1.c **** 
 408:Generated_Source\PSoC5/SPIM_1.c **** 
 409:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ReadRxStatus
 411:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPIM_1.c **** *
 413:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 414:Generated_Source\PSoC5/SPIM_1.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPIM_1.c **** *
 416:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 417:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 418:Generated_Source\PSoC5/SPIM_1.c **** *
 419:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 420:Generated_Source\PSoC5/SPIM_1.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPIM_1.c **** *
 422:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 423:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPIM_1.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPIM_1.c **** *
 426:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 427:Generated_Source\PSoC5/SPIM_1.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPIM_1.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPIM_1.c **** *
 430:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPIM_1.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPIM_1.c **** *
 433:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 435:Generated_Source\PSoC5/SPIM_1.c **** *
 436:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPIM_1.c **** uint8 SPIM_1_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPIM_1.c **** {
 519              		.loc 1 438 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/SPIM_1.c ****     uint8 tmpStatus;
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 18


 440:Generated_Source\PSoC5/SPIM_1.c **** 
 441:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableRxInt();
 444:Generated_Source\PSoC5/SPIM_1.c **** 
 445:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
 446:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPIM_1.c **** 
 448:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableRxInt();
 449:Generated_Source\PSoC5/SPIM_1.c **** 
 450:Generated_Source\PSoC5/SPIM_1.c ****     #else
 451:Generated_Source\PSoC5/SPIM_1.c **** 
 452:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus = SPIM_1_RX_STATUS_REG;
 531              		.loc 1 452 0
 532 0006 044B     		ldr	r3, .L30
 533 0008 1B78     		ldrb	r3, [r3]
 534 000a FB71     		strb	r3, [r7, #7]
 453:Generated_Source\PSoC5/SPIM_1.c **** 
 454:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPIM_1.c **** 
 456:Generated_Source\PSoC5/SPIM_1.c ****     return(tmpStatus);
 535              		.loc 1 456 0
 536 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/SPIM_1.c **** }
 537              		.loc 1 457 0
 538 000e 1846     		mov	r0, r3
 539 0010 0C37     		adds	r7, r7, #12
 540              		.cfi_def_cfa_offset 4
 541 0012 BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 0014 80BC     		pop	{r7}
 545              		.cfi_restore 7
 546              		.cfi_def_cfa_offset 0
 547 0016 7047     		bx	lr
 548              	.L31:
 549              		.align	2
 550              	.L30:
 551 0018 65640040 		.word	1073767525
 552              		.cfi_endproc
 553              	.LFE11:
 554              		.size	SPIM_1_ReadRxStatus, .-SPIM_1_ReadRxStatus
 555              		.section	.text.SPIM_1_WriteTxData,"ax",%progbits
 556              		.align	2
 557              		.global	SPIM_1_WriteTxData
 558              		.thumb
 559              		.thumb_func
 560              		.type	SPIM_1_WriteTxData, %function
 561              	SPIM_1_WriteTxData:
 562              	.LFB12:
 458:Generated_Source\PSoC5/SPIM_1.c **** 
 459:Generated_Source\PSoC5/SPIM_1.c **** 
 460:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_WriteTxData
 462:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPIM_1.c **** *
 464:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 19


 465:Generated_Source\PSoC5/SPIM_1.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPIM_1.c **** *
 467:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 468:Generated_Source\PSoC5/SPIM_1.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPIM_1.c **** *
 470:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 471:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 472:Generated_Source\PSoC5/SPIM_1.c **** *
 473:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 474:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPIM_1.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPIM_1.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPIM_1.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBuffer[SPIM_1_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPIM_1.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPIM_1.c **** *
 482:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 483:Generated_Source\PSoC5/SPIM_1.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPIM_1.c **** *
 485:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPIM_1.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPIM_1.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPIM_1.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPIM_1.c **** *
 490:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 492:Generated_Source\PSoC5/SPIM_1.c **** *
 493:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPIM_1.c **** {
 563              		.loc 1 495 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568 0000 80B4     		push	{r7}
 569              		.cfi_def_cfa_offset 4
 570              		.cfi_offset 7, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 575 0006 0346     		mov	r3, r0
 576 0008 FB71     		strb	r3, [r7, #7]
 496:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPIM_1.c **** 
 498:Generated_Source\PSoC5/SPIM_1.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPIM_1.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPIM_1.c **** 
 501:Generated_Source\PSoC5/SPIM_1.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPIM_1.c ****         do
 503:Generated_Source\PSoC5/SPIM_1.c ****         {
 504:Generated_Source\PSoC5/SPIM_1.c ****             tmpTxBufferRead = SPIM_1_txBufferRead;
 505:Generated_Source\PSoC5/SPIM_1.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPIM_1.c ****             {
 507:Generated_Source\PSoC5/SPIM_1.c ****                 tmpTxBufferRead = (SPIM_1_TX_BUFFER_SIZE - 1u);
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 20


 508:Generated_Source\PSoC5/SPIM_1.c ****             }
 509:Generated_Source\PSoC5/SPIM_1.c ****             else
 510:Generated_Source\PSoC5/SPIM_1.c ****             {
 511:Generated_Source\PSoC5/SPIM_1.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC5/SPIM_1.c ****             }
 513:Generated_Source\PSoC5/SPIM_1.c **** 
 514:Generated_Source\PSoC5/SPIM_1.c ****         }while(tmpTxBufferRead == SPIM_1_txBufferWrite);
 515:Generated_Source\PSoC5/SPIM_1.c **** 
 516:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableTxInt();
 518:Generated_Source\PSoC5/SPIM_1.c **** 
 519:Generated_Source\PSoC5/SPIM_1.c ****         tempStatus = SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
 520:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPIM_1.c **** 
 522:Generated_Source\PSoC5/SPIM_1.c **** 
 523:Generated_Source\PSoC5/SPIM_1.c ****         if((SPIM_1_txBufferRead == SPIM_1_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPIM_1.c ****            (0u != (SPIM_1_swStatusTx & SPIM_1_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPIM_1.c ****         {
 526:Generated_Source\PSoC5/SPIM_1.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPIM_1.c ****             CY_SET_REG8(SPIM_1_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPIM_1.c ****         }
 529:Generated_Source\PSoC5/SPIM_1.c ****         else
 530:Generated_Source\PSoC5/SPIM_1.c ****         {
 531:Generated_Source\PSoC5/SPIM_1.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPIM_1.c ****             SPIM_1_txBufferWrite++;
 533:Generated_Source\PSoC5/SPIM_1.c ****             if(SPIM_1_txBufferWrite >= SPIM_1_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPIM_1.c ****             {
 535:Generated_Source\PSoC5/SPIM_1.c ****                 SPIM_1_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPIM_1.c ****             }
 537:Generated_Source\PSoC5/SPIM_1.c **** 
 538:Generated_Source\PSoC5/SPIM_1.c ****             if(SPIM_1_txBufferWrite == SPIM_1_txBufferRead)
 539:Generated_Source\PSoC5/SPIM_1.c ****             {
 540:Generated_Source\PSoC5/SPIM_1.c ****                 SPIM_1_txBufferRead++;
 541:Generated_Source\PSoC5/SPIM_1.c ****                 if(SPIM_1_txBufferRead >= SPIM_1_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPIM_1.c ****                 {
 543:Generated_Source\PSoC5/SPIM_1.c ****                     SPIM_1_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPIM_1.c ****                 }
 545:Generated_Source\PSoC5/SPIM_1.c ****                 SPIM_1_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPIM_1.c ****             }
 547:Generated_Source\PSoC5/SPIM_1.c **** 
 548:Generated_Source\PSoC5/SPIM_1.c ****             SPIM_1_txBuffer[SPIM_1_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPIM_1.c **** 
 550:Generated_Source\PSoC5/SPIM_1.c ****             SPIM_1_TX_STATUS_MASK_REG |= SPIM_1_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPIM_1.c ****         }
 552:Generated_Source\PSoC5/SPIM_1.c **** 
 553:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableTxInt();
 554:Generated_Source\PSoC5/SPIM_1.c **** 
 555:Generated_Source\PSoC5/SPIM_1.c ****     #else
 556:Generated_Source\PSoC5/SPIM_1.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPIM_1.c ****         while(0u == (SPIM_1_TX_STATUS_REG & SPIM_1_STS_TX_FIFO_NOT_FULL))
 577              		.loc 1 557 0
 578 000a 00BF     		nop
 579              	.L33:
 580              		.loc 1 557 0 is_stmt 0 discriminator 1
 581 000c 074B     		ldr	r3, .L34
 582 000e 1B78     		ldrb	r3, [r3]
 583 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 21


 584 0012 03F00403 		and	r3, r3, #4
 585 0016 002B     		cmp	r3, #0
 586 0018 F8D0     		beq	.L33
 558:Generated_Source\PSoC5/SPIM_1.c ****         {
 559:Generated_Source\PSoC5/SPIM_1.c ****         }
 560:Generated_Source\PSoC5/SPIM_1.c **** 
 561:Generated_Source\PSoC5/SPIM_1.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPIM_1.c ****         CY_SET_REG8(SPIM_1_TXDATA_PTR, txData);
 587              		.loc 1 562 0 is_stmt 1
 588 001a 054A     		ldr	r2, .L34+4
 589 001c FB79     		ldrb	r3, [r7, #7]
 590 001e 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/SPIM_1.c **** 
 564:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPIM_1.c **** }
 591              		.loc 1 565 0
 592 0020 00BF     		nop
 593 0022 0C37     		adds	r7, r7, #12
 594              		.cfi_def_cfa_offset 4
 595 0024 BD46     		mov	sp, r7
 596              		.cfi_def_cfa_register 13
 597              		@ sp needed
 598 0026 80BC     		pop	{r7}
 599              		.cfi_restore 7
 600              		.cfi_def_cfa_offset 0
 601 0028 7047     		bx	lr
 602              	.L35:
 603 002a 00BF     		.align	2
 604              	.L34:
 605 002c 62640040 		.word	1073767522
 606 0030 42640040 		.word	1073767490
 607              		.cfi_endproc
 608              	.LFE12:
 609              		.size	SPIM_1_WriteTxData, .-SPIM_1_WriteTxData
 610              		.section	.text.SPIM_1_ReadRxData,"ax",%progbits
 611              		.align	2
 612              		.global	SPIM_1_ReadRxData
 613              		.thumb
 614              		.thumb_func
 615              		.type	SPIM_1_ReadRxData, %function
 616              	SPIM_1_ReadRxData:
 617              	.LFB13:
 566:Generated_Source\PSoC5/SPIM_1.c **** 
 567:Generated_Source\PSoC5/SPIM_1.c **** 
 568:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ReadRxData
 570:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPIM_1.c **** *
 572:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 573:Generated_Source\PSoC5/SPIM_1.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPIM_1.c **** *
 575:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 576:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 577:Generated_Source\PSoC5/SPIM_1.c **** *
 578:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 579:Generated_Source\PSoC5/SPIM_1.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPIM_1.c **** *
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 22


 581:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 582:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPIM_1.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPIM_1.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPIM_1.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBuffer[SPIM_1_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPIM_1.c **** *  received data.
 589:Generated_Source\PSoC5/SPIM_1.c **** *
 590:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 591:Generated_Source\PSoC5/SPIM_1.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPIM_1.c **** *
 593:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPIM_1.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPIM_1.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPIM_1.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPIM_1.c **** *
 598:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 600:Generated_Source\PSoC5/SPIM_1.c **** *
 601:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPIM_1.c **** uint8 SPIM_1_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPIM_1.c **** {
 618              		.loc 1 603 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 83B0     		sub	sp, sp, #12
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC5/SPIM_1.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPIM_1.c **** 
 606:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPIM_1.c **** 
 608:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableRxInt();
 610:Generated_Source\PSoC5/SPIM_1.c **** 
 611:Generated_Source\PSoC5/SPIM_1.c ****         if(SPIM_1_rxBufferRead != SPIM_1_rxBufferWrite)
 612:Generated_Source\PSoC5/SPIM_1.c ****         {
 613:Generated_Source\PSoC5/SPIM_1.c ****             if(0u == SPIM_1_rxBufferFull)
 614:Generated_Source\PSoC5/SPIM_1.c ****             {
 615:Generated_Source\PSoC5/SPIM_1.c ****                 SPIM_1_rxBufferRead++;
 616:Generated_Source\PSoC5/SPIM_1.c ****                 if(SPIM_1_rxBufferRead >= SPIM_1_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPIM_1.c ****                 {
 618:Generated_Source\PSoC5/SPIM_1.c ****                     SPIM_1_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPIM_1.c ****                 }
 620:Generated_Source\PSoC5/SPIM_1.c ****             }
 621:Generated_Source\PSoC5/SPIM_1.c ****             else
 622:Generated_Source\PSoC5/SPIM_1.c ****             {
 623:Generated_Source\PSoC5/SPIM_1.c ****                 SPIM_1_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPIM_1.c ****             }
 625:Generated_Source\PSoC5/SPIM_1.c ****         }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 23


 626:Generated_Source\PSoC5/SPIM_1.c **** 
 627:Generated_Source\PSoC5/SPIM_1.c ****         rxData = SPIM_1_rxBuffer[SPIM_1_rxBufferRead];
 628:Generated_Source\PSoC5/SPIM_1.c **** 
 629:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableRxInt();
 630:Generated_Source\PSoC5/SPIM_1.c **** 
 631:Generated_Source\PSoC5/SPIM_1.c ****     #else
 632:Generated_Source\PSoC5/SPIM_1.c **** 
 633:Generated_Source\PSoC5/SPIM_1.c ****         rxData = CY_GET_REG8(SPIM_1_RXDATA_PTR);
 630              		.loc 1 633 0
 631 0006 044B     		ldr	r3, .L38
 632 0008 1B78     		ldrb	r3, [r3]
 633 000a FB71     		strb	r3, [r7, #7]
 634:Generated_Source\PSoC5/SPIM_1.c **** 
 635:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPIM_1.c **** 
 637:Generated_Source\PSoC5/SPIM_1.c ****     return(rxData);
 634              		.loc 1 637 0
 635 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:Generated_Source\PSoC5/SPIM_1.c **** }
 636              		.loc 1 638 0
 637 000e 1846     		mov	r0, r3
 638 0010 0C37     		adds	r7, r7, #12
 639              		.cfi_def_cfa_offset 4
 640 0012 BD46     		mov	sp, r7
 641              		.cfi_def_cfa_register 13
 642              		@ sp needed
 643 0014 80BC     		pop	{r7}
 644              		.cfi_restore 7
 645              		.cfi_def_cfa_offset 0
 646 0016 7047     		bx	lr
 647              	.L39:
 648              		.align	2
 649              	.L38:
 650 0018 52640040 		.word	1073767506
 651              		.cfi_endproc
 652              	.LFE13:
 653              		.size	SPIM_1_ReadRxData, .-SPIM_1_ReadRxData
 654              		.section	.text.SPIM_1_GetRxBufferSize,"ax",%progbits
 655              		.align	2
 656              		.global	SPIM_1_GetRxBufferSize
 657              		.thumb
 658              		.thumb_func
 659              		.type	SPIM_1_GetRxBufferSize, %function
 660              	SPIM_1_GetRxBufferSize:
 661              	.LFB14:
 639:Generated_Source\PSoC5/SPIM_1.c **** 
 640:Generated_Source\PSoC5/SPIM_1.c **** 
 641:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_GetRxBufferSize
 643:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPIM_1.c **** *
 645:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 646:Generated_Source\PSoC5/SPIM_1.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPIM_1.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPIM_1.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPIM_1.c **** *
 650:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 24


 651:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 652:Generated_Source\PSoC5/SPIM_1.c **** *
 653:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 654:Generated_Source\PSoC5/SPIM_1.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPIM_1.c **** *
 656:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 657:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPIM_1.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPIM_1.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPIM_1.c **** *
 662:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPIM_1.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPIM_1.c **** *
 665:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPIM_1.c **** uint8 SPIM_1_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPIM_1.c **** {
 662              		.loc 1 667 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 0000 80B4     		push	{r7}
 668              		.cfi_def_cfa_offset 4
 669              		.cfi_offset 7, -4
 670 0002 83B0     		sub	sp, sp, #12
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC5/SPIM_1.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPIM_1.c **** 
 670:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPIM_1.c **** 
 672:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableRxInt();
 674:Generated_Source\PSoC5/SPIM_1.c **** 
 675:Generated_Source\PSoC5/SPIM_1.c ****         if(SPIM_1_rxBufferRead == SPIM_1_rxBufferWrite)
 676:Generated_Source\PSoC5/SPIM_1.c ****         {
 677:Generated_Source\PSoC5/SPIM_1.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPIM_1.c ****         }
 679:Generated_Source\PSoC5/SPIM_1.c ****         else if(SPIM_1_rxBufferRead < SPIM_1_rxBufferWrite)
 680:Generated_Source\PSoC5/SPIM_1.c ****         {
 681:Generated_Source\PSoC5/SPIM_1.c ****             size = (SPIM_1_rxBufferWrite - SPIM_1_rxBufferRead);
 682:Generated_Source\PSoC5/SPIM_1.c ****         }
 683:Generated_Source\PSoC5/SPIM_1.c ****         else
 684:Generated_Source\PSoC5/SPIM_1.c ****         {
 685:Generated_Source\PSoC5/SPIM_1.c ****             size = (SPIM_1_RX_BUFFER_SIZE - SPIM_1_rxBufferRead) + SPIM_1_rxBufferWrite;
 686:Generated_Source\PSoC5/SPIM_1.c ****         }
 687:Generated_Source\PSoC5/SPIM_1.c **** 
 688:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableRxInt();
 689:Generated_Source\PSoC5/SPIM_1.c **** 
 690:Generated_Source\PSoC5/SPIM_1.c ****     #else
 691:Generated_Source\PSoC5/SPIM_1.c **** 
 692:Generated_Source\PSoC5/SPIM_1.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPIM_1.c ****         size = (0u != (SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 674              		.loc 1 693 0
 675 0006 084B     		ldr	r3, .L44
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 25


 676 0008 1B78     		ldrb	r3, [r3]
 677 000a DBB2     		uxtb	r3, r3
 678 000c 03F02003 		and	r3, r3, #32
 679 0010 002B     		cmp	r3, #0
 680 0012 01D0     		beq	.L41
 681              		.loc 1 693 0 is_stmt 0 discriminator 1
 682 0014 0123     		movs	r3, #1
 683 0016 00E0     		b	.L42
 684              	.L41:
 685              		.loc 1 693 0 discriminator 2
 686 0018 0023     		movs	r3, #0
 687              	.L42:
 688              		.loc 1 693 0 discriminator 4
 689 001a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/SPIM_1.c **** 
 695:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPIM_1.c **** 
 697:Generated_Source\PSoC5/SPIM_1.c ****     return(size);
 690              		.loc 1 697 0 is_stmt 1 discriminator 4
 691 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPIM_1.c **** }
 692              		.loc 1 698 0 discriminator 4
 693 001e 1846     		mov	r0, r3
 694 0020 0C37     		adds	r7, r7, #12
 695              		.cfi_def_cfa_offset 4
 696 0022 BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 0024 80BC     		pop	{r7}
 700              		.cfi_restore 7
 701              		.cfi_def_cfa_offset 0
 702 0026 7047     		bx	lr
 703              	.L45:
 704              		.align	2
 705              	.L44:
 706 0028 65640040 		.word	1073767525
 707              		.cfi_endproc
 708              	.LFE14:
 709              		.size	SPIM_1_GetRxBufferSize, .-SPIM_1_GetRxBufferSize
 710              		.section	.text.SPIM_1_GetTxBufferSize,"ax",%progbits
 711              		.align	2
 712              		.global	SPIM_1_GetTxBufferSize
 713              		.thumb
 714              		.thumb_func
 715              		.type	SPIM_1_GetTxBufferSize, %function
 716              	SPIM_1_GetTxBufferSize:
 717              	.LFB15:
 699:Generated_Source\PSoC5/SPIM_1.c **** 
 700:Generated_Source\PSoC5/SPIM_1.c **** 
 701:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_GetTxBufferSize
 703:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPIM_1.c **** *
 705:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 706:Generated_Source\PSoC5/SPIM_1.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPIM_1.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPIM_1.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 26


 709:Generated_Source\PSoC5/SPIM_1.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPIM_1.c **** *
 711:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 713:Generated_Source\PSoC5/SPIM_1.c **** *
 714:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 715:Generated_Source\PSoC5/SPIM_1.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPIM_1.c **** *
 717:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIM_1.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIM_1.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPIM_1.c **** *
 723:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPIM_1.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPIM_1.c **** *
 726:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIM_1.c **** uint8  SPIM_1_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIM_1.c **** {
 718              		.loc 1 728 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 83B0     		sub	sp, sp, #12
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPIM_1.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIM_1.c **** 
 731:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableTxInt();
 734:Generated_Source\PSoC5/SPIM_1.c **** 
 735:Generated_Source\PSoC5/SPIM_1.c ****         if(SPIM_1_txBufferRead == SPIM_1_txBufferWrite)
 736:Generated_Source\PSoC5/SPIM_1.c ****         {
 737:Generated_Source\PSoC5/SPIM_1.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPIM_1.c ****         }
 739:Generated_Source\PSoC5/SPIM_1.c ****         else if(SPIM_1_txBufferRead < SPIM_1_txBufferWrite)
 740:Generated_Source\PSoC5/SPIM_1.c ****         {
 741:Generated_Source\PSoC5/SPIM_1.c ****             size = (SPIM_1_txBufferWrite - SPIM_1_txBufferRead);
 742:Generated_Source\PSoC5/SPIM_1.c ****         }
 743:Generated_Source\PSoC5/SPIM_1.c ****         else
 744:Generated_Source\PSoC5/SPIM_1.c ****         {
 745:Generated_Source\PSoC5/SPIM_1.c ****             size = (SPIM_1_TX_BUFFER_SIZE - SPIM_1_txBufferRead) + SPIM_1_txBufferWrite;
 746:Generated_Source\PSoC5/SPIM_1.c ****         }
 747:Generated_Source\PSoC5/SPIM_1.c **** 
 748:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableTxInt();
 749:Generated_Source\PSoC5/SPIM_1.c **** 
 750:Generated_Source\PSoC5/SPIM_1.c ****     #else
 751:Generated_Source\PSoC5/SPIM_1.c **** 
 752:Generated_Source\PSoC5/SPIM_1.c ****         size = SPIM_1_TX_STATUS_REG;
 730              		.loc 1 752 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 27


 731 0006 0D4B     		ldr	r3, .L51
 732 0008 1B78     		ldrb	r3, [r3]
 733 000a FB71     		strb	r3, [r7, #7]
 753:Generated_Source\PSoC5/SPIM_1.c **** 
 754:Generated_Source\PSoC5/SPIM_1.c ****         if(0u != (size & SPIM_1_STS_TX_FIFO_EMPTY))
 734              		.loc 1 754 0
 735 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 736 000e 03F00203 		and	r3, r3, #2
 737 0012 002B     		cmp	r3, #0
 738 0014 02D0     		beq	.L47
 755:Generated_Source\PSoC5/SPIM_1.c ****         {
 756:Generated_Source\PSoC5/SPIM_1.c ****             size = 0u;
 739              		.loc 1 756 0
 740 0016 0023     		movs	r3, #0
 741 0018 FB71     		strb	r3, [r7, #7]
 742 001a 09E0     		b	.L48
 743              	.L47:
 757:Generated_Source\PSoC5/SPIM_1.c ****         }
 758:Generated_Source\PSoC5/SPIM_1.c ****         else if(0u != (size & SPIM_1_STS_TX_FIFO_NOT_FULL))
 744              		.loc 1 758 0
 745 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 746 001e 03F00403 		and	r3, r3, #4
 747 0022 002B     		cmp	r3, #0
 748 0024 02D0     		beq	.L49
 759:Generated_Source\PSoC5/SPIM_1.c ****         {
 760:Generated_Source\PSoC5/SPIM_1.c ****             size = 1u;
 749              		.loc 1 760 0
 750 0026 0123     		movs	r3, #1
 751 0028 FB71     		strb	r3, [r7, #7]
 752 002a 01E0     		b	.L48
 753              	.L49:
 761:Generated_Source\PSoC5/SPIM_1.c ****         }
 762:Generated_Source\PSoC5/SPIM_1.c ****         else
 763:Generated_Source\PSoC5/SPIM_1.c ****         {
 764:Generated_Source\PSoC5/SPIM_1.c ****             size = SPIM_1_FIFO_SIZE;
 754              		.loc 1 764 0
 755 002c 0423     		movs	r3, #4
 756 002e FB71     		strb	r3, [r7, #7]
 757              	.L48:
 765:Generated_Source\PSoC5/SPIM_1.c ****         }
 766:Generated_Source\PSoC5/SPIM_1.c **** 
 767:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPIM_1.c **** 
 769:Generated_Source\PSoC5/SPIM_1.c ****     return(size);
 758              		.loc 1 769 0
 759 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:Generated_Source\PSoC5/SPIM_1.c **** }
 760              		.loc 1 770 0
 761 0032 1846     		mov	r0, r3
 762 0034 0C37     		adds	r7, r7, #12
 763              		.cfi_def_cfa_offset 4
 764 0036 BD46     		mov	sp, r7
 765              		.cfi_def_cfa_register 13
 766              		@ sp needed
 767 0038 80BC     		pop	{r7}
 768              		.cfi_restore 7
 769              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 28


 770 003a 7047     		bx	lr
 771              	.L52:
 772              		.align	2
 773              	.L51:
 774 003c 62640040 		.word	1073767522
 775              		.cfi_endproc
 776              	.LFE15:
 777              		.size	SPIM_1_GetTxBufferSize, .-SPIM_1_GetTxBufferSize
 778              		.section	.text.SPIM_1_ClearRxBuffer,"ax",%progbits
 779              		.align	2
 780              		.global	SPIM_1_ClearRxBuffer
 781              		.thumb
 782              		.thumb_func
 783              		.type	SPIM_1_ClearRxBuffer, %function
 784              	SPIM_1_ClearRxBuffer:
 785              	.LFB16:
 771:Generated_Source\PSoC5/SPIM_1.c **** 
 772:Generated_Source\PSoC5/SPIM_1.c **** 
 773:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ClearRxBuffer
 775:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPIM_1.c **** *
 777:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 778:Generated_Source\PSoC5/SPIM_1.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPIM_1.c **** *
 780:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 781:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 782:Generated_Source\PSoC5/SPIM_1.c **** *
 783:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 784:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 785:Generated_Source\PSoC5/SPIM_1.c **** *
 786:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 787:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPIM_1.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPIM_1.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPIM_1.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPIM_1.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPIM_1.c **** *
 794:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 795:Generated_Source\PSoC5/SPIM_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPIM_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPIM_1.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPIM_1.c **** *
 799:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPIM_1.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPIM_1.c **** *
 802:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 804:Generated_Source\PSoC5/SPIM_1.c **** *
 805:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPIM_1.c **** {
 786              		.loc 1 807 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 29


 790              		@ link register save eliminated.
 791 0000 80B4     		push	{r7}
 792              		.cfi_def_cfa_offset 4
 793              		.cfi_offset 7, -4
 794 0002 00AF     		add	r7, sp, #0
 795              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC5/SPIM_1.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPIM_1.c ****     while(0u !=(SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
 796              		.loc 1 809 0
 797 0004 01E0     		b	.L54
 798              	.L55:
 810:Generated_Source\PSoC5/SPIM_1.c ****     {
 811:Generated_Source\PSoC5/SPIM_1.c ****         (void) CY_GET_REG8(SPIM_1_RXDATA_PTR);
 799              		.loc 1 811 0
 800 0006 064B     		ldr	r3, .L56
 801 0008 1B78     		ldrb	r3, [r3]
 802              	.L54:
 809:Generated_Source\PSoC5/SPIM_1.c ****     {
 803              		.loc 1 809 0
 804 000a 064B     		ldr	r3, .L56+4
 805 000c 1B78     		ldrb	r3, [r3]
 806 000e DBB2     		uxtb	r3, r3
 807 0010 03F02003 		and	r3, r3, #32
 808 0014 002B     		cmp	r3, #0
 809 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC5/SPIM_1.c ****     }
 813:Generated_Source\PSoC5/SPIM_1.c **** 
 814:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableRxInt();
 817:Generated_Source\PSoC5/SPIM_1.c **** 
 818:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPIM_1.c **** 
 822:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableRxInt();
 823:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPIM_1.c **** }
 810              		.loc 1 824 0
 811 0018 00BF     		nop
 812 001a BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 001c 80BC     		pop	{r7}
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 001e 7047     		bx	lr
 819              	.L57:
 820              		.align	2
 821              	.L56:
 822 0020 52640040 		.word	1073767506
 823 0024 65640040 		.word	1073767525
 824              		.cfi_endproc
 825              	.LFE16:
 826              		.size	SPIM_1_ClearRxBuffer, .-SPIM_1_ClearRxBuffer
 827              		.section	.text.SPIM_1_ClearTxBuffer,"ax",%progbits
 828              		.align	2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 30


 829              		.global	SPIM_1_ClearTxBuffer
 830              		.thumb
 831              		.thumb_func
 832              		.type	SPIM_1_ClearTxBuffer, %function
 833              	SPIM_1_ClearTxBuffer:
 834              	.LFB17:
 825:Generated_Source\PSoC5/SPIM_1.c **** 
 826:Generated_Source\PSoC5/SPIM_1.c **** 
 827:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ClearTxBuffer
 829:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPIM_1.c **** *
 831:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 832:Generated_Source\PSoC5/SPIM_1.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPIM_1.c **** *
 834:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 835:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 836:Generated_Source\PSoC5/SPIM_1.c **** *
 837:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 838:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 839:Generated_Source\PSoC5/SPIM_1.c **** *
 840:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
 841:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPIM_1.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPIM_1.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPIM_1.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPIM_1.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPIM_1.c **** *
 848:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
 849:Generated_Source\PSoC5/SPIM_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPIM_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPIM_1.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPIM_1.c **** *
 853:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPIM_1.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPIM_1.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPIM_1.c **** *
 857:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 859:Generated_Source\PSoC5/SPIM_1.c **** *
 860:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPIM_1.c **** {
 835              		.loc 1 862 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 8
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839 0000 80B5     		push	{r7, lr}
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 82B0     		sub	sp, sp, #8
 844              		.cfi_def_cfa_offset 16
 845 0004 00AF     		add	r7, sp, #0
 846              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC5/SPIM_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 31


 864:Generated_Source\PSoC5/SPIM_1.c **** 
 865:Generated_Source\PSoC5/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 847              		.loc 1 865 0
 848 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 849 000a 0346     		mov	r3, r0
 850 000c FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/SPIM_1.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 851              		.loc 1 867 0
 852 000e 0C4A     		ldr	r2, .L59
 853 0010 0B4B     		ldr	r3, .L59
 854 0012 1B78     		ldrb	r3, [r3]
 855 0014 DBB2     		uxtb	r3, r3
 856 0016 43F00103 		orr	r3, r3, #1
 857 001a DBB2     		uxtb	r3, r3
 858 001c 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 859              		.loc 1 868 0
 860 001e 084A     		ldr	r2, .L59
 861 0020 074B     		ldr	r3, .L59
 862 0022 1B78     		ldrb	r3, [r3]
 863 0024 DBB2     		uxtb	r3, r3
 864 0026 23F00103 		bic	r3, r3, #1
 865 002a DBB2     		uxtb	r3, r3
 866 002c 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC5/SPIM_1.c **** 
 870:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPIM_1.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 867              		.loc 1 875 0
 868 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 869 0030 1846     		mov	r0, r3
 870 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC5/SPIM_1.c **** 
 877:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPIM_1.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableTxInt();
 880:Generated_Source\PSoC5/SPIM_1.c **** 
 881:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPIM_1.c **** 
 885:Generated_Source\PSoC5/SPIM_1.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_1_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPIM_1.c **** 
 888:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableTxInt();
 889:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPIM_1.c **** }
 871              		.loc 1 890 0
 872 0036 00BF     		nop
 873 0038 0837     		adds	r7, r7, #8
 874              		.cfi_def_cfa_offset 8
 875 003a BD46     		mov	sp, r7
 876              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 32


 877              		@ sp needed
 878 003c 80BD     		pop	{r7, pc}
 879              	.L60:
 880 003e 00BF     		.align	2
 881              	.L59:
 882 0040 92640040 		.word	1073767570
 883              		.cfi_endproc
 884              	.LFE17:
 885              		.size	SPIM_1_ClearTxBuffer, .-SPIM_1_ClearTxBuffer
 886              		.section	.text.SPIM_1_TxEnable,"ax",%progbits
 887              		.align	2
 888              		.global	SPIM_1_TxEnable
 889              		.thumb
 890              		.thumb_func
 891              		.type	SPIM_1_TxEnable, %function
 892              	SPIM_1_TxEnable:
 893              	.LFB18:
 891:Generated_Source\PSoC5/SPIM_1.c **** 
 892:Generated_Source\PSoC5/SPIM_1.c **** 
 893:Generated_Source\PSoC5/SPIM_1.c **** #if(0u != SPIM_1_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPIM_1.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPIM_1.c ****     * Function Name: SPIM_1_TxEnable
 896:Generated_Source\PSoC5/SPIM_1.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPIM_1.c ****     *
 898:Generated_Source\PSoC5/SPIM_1.c ****     * Summary:
 899:Generated_Source\PSoC5/SPIM_1.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPIM_1.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPIM_1.c ****     *
 902:Generated_Source\PSoC5/SPIM_1.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPIM_1.c ****     *  None.
 904:Generated_Source\PSoC5/SPIM_1.c ****     *
 905:Generated_Source\PSoC5/SPIM_1.c ****     * Return:
 906:Generated_Source\PSoC5/SPIM_1.c ****     *  None.
 907:Generated_Source\PSoC5/SPIM_1.c ****     *
 908:Generated_Source\PSoC5/SPIM_1.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPIM_1.c ****     void SPIM_1_TxEnable(void) 
 910:Generated_Source\PSoC5/SPIM_1.c ****     {
 894              		.loc 1 910 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 80B4     		push	{r7}
 900              		.cfi_def_cfa_offset 4
 901              		.cfi_offset 7, -4
 902 0002 00AF     		add	r7, sp, #0
 903              		.cfi_def_cfa_register 7
 911:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_CONTROL_REG |= SPIM_1_CTRL_TX_SIGNAL_EN;
 904              		.loc 1 911 0
 905 0004 054A     		ldr	r2, .L62
 906 0006 054B     		ldr	r3, .L62
 907 0008 1B78     		ldrb	r3, [r3]
 908 000a DBB2     		uxtb	r3, r3
 909 000c 43F00103 		orr	r3, r3, #1
 910 0010 DBB2     		uxtb	r3, r3
 911 0012 1370     		strb	r3, [r2]
 912:Generated_Source\PSoC5/SPIM_1.c ****     }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 33


 912              		.loc 1 912 0
 913 0014 00BF     		nop
 914 0016 BD46     		mov	sp, r7
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 0018 80BC     		pop	{r7}
 918              		.cfi_restore 7
 919              		.cfi_def_cfa_offset 0
 920 001a 7047     		bx	lr
 921              	.L63:
 922              		.align	2
 923              	.L62:
 924 001c 72640040 		.word	1073767538
 925              		.cfi_endproc
 926              	.LFE18:
 927              		.size	SPIM_1_TxEnable, .-SPIM_1_TxEnable
 928              		.section	.text.SPIM_1_TxDisable,"ax",%progbits
 929              		.align	2
 930              		.global	SPIM_1_TxDisable
 931              		.thumb
 932              		.thumb_func
 933              		.type	SPIM_1_TxDisable, %function
 934              	SPIM_1_TxDisable:
 935              	.LFB19:
 913:Generated_Source\PSoC5/SPIM_1.c **** 
 914:Generated_Source\PSoC5/SPIM_1.c **** 
 915:Generated_Source\PSoC5/SPIM_1.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPIM_1.c ****     * Function Name: SPIM_1_TxDisable
 917:Generated_Source\PSoC5/SPIM_1.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPIM_1.c ****     *
 919:Generated_Source\PSoC5/SPIM_1.c ****     * Summary:
 920:Generated_Source\PSoC5/SPIM_1.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPIM_1.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPIM_1.c ****     *
 923:Generated_Source\PSoC5/SPIM_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPIM_1.c ****     *  None.
 925:Generated_Source\PSoC5/SPIM_1.c ****     *
 926:Generated_Source\PSoC5/SPIM_1.c ****     * Return:
 927:Generated_Source\PSoC5/SPIM_1.c ****     *  None.
 928:Generated_Source\PSoC5/SPIM_1.c ****     *
 929:Generated_Source\PSoC5/SPIM_1.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPIM_1.c ****     void SPIM_1_TxDisable(void) 
 931:Generated_Source\PSoC5/SPIM_1.c ****     {
 936              		.loc 1 931 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 1, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941 0000 80B4     		push	{r7}
 942              		.cfi_def_cfa_offset 4
 943              		.cfi_offset 7, -4
 944 0002 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 932:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_CONTROL_REG &= ((uint8) ~SPIM_1_CTRL_TX_SIGNAL_EN);
 946              		.loc 1 932 0
 947 0004 054A     		ldr	r2, .L65
 948 0006 054B     		ldr	r3, .L65
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 34


 949 0008 1B78     		ldrb	r3, [r3]
 950 000a DBB2     		uxtb	r3, r3
 951 000c 23F00103 		bic	r3, r3, #1
 952 0010 DBB2     		uxtb	r3, r3
 953 0012 1370     		strb	r3, [r2]
 933:Generated_Source\PSoC5/SPIM_1.c ****     }
 954              		.loc 1 933 0
 955 0014 00BF     		nop
 956 0016 BD46     		mov	sp, r7
 957              		.cfi_def_cfa_register 13
 958              		@ sp needed
 959 0018 80BC     		pop	{r7}
 960              		.cfi_restore 7
 961              		.cfi_def_cfa_offset 0
 962 001a 7047     		bx	lr
 963              	.L66:
 964              		.align	2
 965              	.L65:
 966 001c 72640040 		.word	1073767538
 967              		.cfi_endproc
 968              	.LFE19:
 969              		.size	SPIM_1_TxDisable, .-SPIM_1_TxDisable
 970              		.section	.text.SPIM_1_PutArray,"ax",%progbits
 971              		.align	2
 972              		.global	SPIM_1_PutArray
 973              		.thumb
 974              		.thumb_func
 975              		.type	SPIM_1_PutArray, %function
 976              	SPIM_1_PutArray:
 977              	.LFB20:
 934:Generated_Source\PSoC5/SPIM_1.c **** 
 935:Generated_Source\PSoC5/SPIM_1.c **** #endif /* (0u != SPIM_1_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPIM_1.c **** 
 937:Generated_Source\PSoC5/SPIM_1.c **** 
 938:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_PutArray
 940:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPIM_1.c **** *
 942:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 943:Generated_Source\PSoC5/SPIM_1.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPIM_1.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPIM_1.c **** *
 946:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 947:Generated_Source\PSoC5/SPIM_1.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPIM_1.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPIM_1.c **** *
 950:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 951:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 952:Generated_Source\PSoC5/SPIM_1.c **** *
 953:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPIM_1.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPIM_1.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPIM_1.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPIM_1.c **** *
 958:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPIM_1.c **** *  No.
 960:Generated_Source\PSoC5/SPIM_1.c **** *
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 35


 961:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPIM_1.c ****                                                                           
 964:Generated_Source\PSoC5/SPIM_1.c **** {
 978              		.loc 1 964 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 16
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 84B0     		sub	sp, sp, #16
 987              		.cfi_def_cfa_offset 24
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
 990 0006 7860     		str	r0, [r7, #4]
 991 0008 0B46     		mov	r3, r1
 992 000a FB70     		strb	r3, [r7, #3]
 965:Generated_Source\PSoC5/SPIM_1.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPIM_1.c **** 
 967:Generated_Source\PSoC5/SPIM_1.c ****     bufIndex = 0u;
 993              		.loc 1 967 0
 994 000c 0023     		movs	r3, #0
 995 000e FB73     		strb	r3, [r7, #15]
 968:Generated_Source\PSoC5/SPIM_1.c **** 
 969:Generated_Source\PSoC5/SPIM_1.c ****     while(byteCount > 0u)
 996              		.loc 1 969 0
 997 0010 0CE0     		b	.L68
 998              	.L69:
 970:Generated_Source\PSoC5/SPIM_1.c ****     {
 971:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_WriteTxData(buffer[bufIndex]);
 999              		.loc 1 971 0
 1000 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1001 0014 7A68     		ldr	r2, [r7, #4]
 1002 0016 1344     		add	r3, r3, r2
 1003 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 001a 1846     		mov	r0, r3
 1005 001c FFF7FEFF 		bl	SPIM_1_WriteTxData
 972:Generated_Source\PSoC5/SPIM_1.c ****         bufIndex++;
 1006              		.loc 1 972 0
 1007 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1008 0022 0133     		adds	r3, r3, #1
 1009 0024 FB73     		strb	r3, [r7, #15]
 973:Generated_Source\PSoC5/SPIM_1.c ****         byteCount--;
 1010              		.loc 1 973 0
 1011 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1012 0028 013B     		subs	r3, r3, #1
 1013 002a FB70     		strb	r3, [r7, #3]
 1014              	.L68:
 969:Generated_Source\PSoC5/SPIM_1.c ****     {
 1015              		.loc 1 969 0
 1016 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1017 002e 002B     		cmp	r3, #0
 1018 0030 EFD1     		bne	.L69
 974:Generated_Source\PSoC5/SPIM_1.c ****     }
 975:Generated_Source\PSoC5/SPIM_1.c **** }
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 36


 1019              		.loc 1 975 0
 1020 0032 00BF     		nop
 1021 0034 1037     		adds	r7, r7, #16
 1022              		.cfi_def_cfa_offset 8
 1023 0036 BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 0038 80BD     		pop	{r7, pc}
 1027              		.cfi_endproc
 1028              	.LFE20:
 1029              		.size	SPIM_1_PutArray, .-SPIM_1_PutArray
 1030 003a 00BF     		.section	.text.SPIM_1_ClearFIFO,"ax",%progbits
 1031              		.align	2
 1032              		.global	SPIM_1_ClearFIFO
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	SPIM_1_ClearFIFO, %function
 1036              	SPIM_1_ClearFIFO:
 1037              	.LFB21:
 976:Generated_Source\PSoC5/SPIM_1.c **** 
 977:Generated_Source\PSoC5/SPIM_1.c **** 
 978:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ClearFIFO
 980:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPIM_1.c **** *
 982:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
 983:Generated_Source\PSoC5/SPIM_1.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPIM_1.c **** *
 985:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
 986:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 987:Generated_Source\PSoC5/SPIM_1.c **** *
 988:Generated_Source\PSoC5/SPIM_1.c **** * Return:
 989:Generated_Source\PSoC5/SPIM_1.c **** *  None.
 990:Generated_Source\PSoC5/SPIM_1.c **** *
 991:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPIM_1.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPIM_1.c **** *
 994:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPIM_1.c **** {
 1038              		.loc 1 996 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 8
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042 0000 80B5     		push	{r7, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 0002 82B0     		sub	sp, sp, #8
 1047              		.cfi_def_cfa_offset 16
 1048 0004 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/SPIM_1.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPIM_1.c **** 
 999:Generated_Source\PSoC5/SPIM_1.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPIM_1.c ****     while(0u !=(SPIM_1_RX_STATUS_REG & SPIM_1_STS_RX_FIFO_NOT_EMPTY))
 1050              		.loc 1 1000 0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 37


 1051 0006 01E0     		b	.L71
 1052              	.L72:
1001:Generated_Source\PSoC5/SPIM_1.c ****     {
1002:Generated_Source\PSoC5/SPIM_1.c ****         (void) CY_GET_REG8(SPIM_1_RXDATA_PTR);
 1053              		.loc 1 1002 0
 1054 0008 124B     		ldr	r3, .L73
 1055 000a 1B78     		ldrb	r3, [r3]
 1056              	.L71:
1000:Generated_Source\PSoC5/SPIM_1.c ****     {
 1057              		.loc 1 1000 0
 1058 000c 124B     		ldr	r3, .L73+4
 1059 000e 1B78     		ldrb	r3, [r3]
 1060 0010 DBB2     		uxtb	r3, r3
 1061 0012 03F02003 		and	r3, r3, #32
 1062 0016 002B     		cmp	r3, #0
 1063 0018 F6D1     		bne	.L72
1003:Generated_Source\PSoC5/SPIM_1.c ****     }
1004:Generated_Source\PSoC5/SPIM_1.c **** 
1005:Generated_Source\PSoC5/SPIM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1064              		.loc 1 1005 0
 1065 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1066 001e 0346     		mov	r3, r0
 1067 0020 FB71     		strb	r3, [r7, #7]
1006:Generated_Source\PSoC5/SPIM_1.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
 1068              		.loc 1 1007 0
 1069 0022 0E4A     		ldr	r2, .L73+8
 1070 0024 0D4B     		ldr	r3, .L73+8
 1071 0026 1B78     		ldrb	r3, [r3]
 1072 0028 DBB2     		uxtb	r3, r3
 1073 002a 43F00103 		orr	r3, r3, #1
 1074 002e DBB2     		uxtb	r3, r3
 1075 0030 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
 1076              		.loc 1 1008 0
 1077 0032 0A4A     		ldr	r2, .L73+8
 1078 0034 094B     		ldr	r3, .L73+8
 1079 0036 1B78     		ldrb	r3, [r3]
 1080 0038 DBB2     		uxtb	r3, r3
 1081 003a 23F00103 		bic	r3, r3, #1
 1082 003e DBB2     		uxtb	r3, r3
 1083 0040 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/SPIM_1.c **** 
1010:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPIM_1.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_1_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_1_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPIM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1084              		.loc 1 1015 0
 1085 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1086 0044 1846     		mov	r0, r3
 1087 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC5/SPIM_1.c **** }
 1088              		.loc 1 1016 0
 1089 004a 00BF     		nop
 1090 004c 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 38


 1091              		.cfi_def_cfa_offset 8
 1092 004e BD46     		mov	sp, r7
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 0050 80BD     		pop	{r7, pc}
 1096              	.L74:
 1097 0052 00BF     		.align	2
 1098              	.L73:
 1099 0054 52640040 		.word	1073767506
 1100 0058 65640040 		.word	1073767525
 1101 005c 92640040 		.word	1073767570
 1102              		.cfi_endproc
 1103              	.LFE21:
 1104              		.size	SPIM_1_ClearFIFO, .-SPIM_1_ClearFIFO
 1105              		.section	.text.SPIM_1_EnableInt,"ax",%progbits
 1106              		.align	2
 1107              		.global	SPIM_1_EnableInt
 1108              		.thumb
 1109              		.thumb_func
 1110              		.type	SPIM_1_EnableInt, %function
 1111              	SPIM_1_EnableInt:
 1112              	.LFB22:
1017:Generated_Source\PSoC5/SPIM_1.c **** 
1018:Generated_Source\PSoC5/SPIM_1.c **** 
1019:Generated_Source\PSoC5/SPIM_1.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPIM_1.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPIM_1.c **** */
1022:Generated_Source\PSoC5/SPIM_1.c **** 
1023:Generated_Source\PSoC5/SPIM_1.c **** 
1024:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_EnableInt
1026:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPIM_1.c **** *
1028:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
1029:Generated_Source\PSoC5/SPIM_1.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPIM_1.c **** *
1031:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIM_1.c **** *  None.
1033:Generated_Source\PSoC5/SPIM_1.c **** *
1034:Generated_Source\PSoC5/SPIM_1.c **** * Return:
1035:Generated_Source\PSoC5/SPIM_1.c **** *  None.
1036:Generated_Source\PSoC5/SPIM_1.c **** *
1037:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
1038:Generated_Source\PSoC5/SPIM_1.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPIM_1.c **** *
1040:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_EnableInt(void) 
1042:Generated_Source\PSoC5/SPIM_1.c **** {
 1113              		.loc 1 1042 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 1, uses_anonymous_args = 0
 1117 0000 80B5     		push	{r7, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 39


 1122              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_EnableRxInt();
 1123              		.loc 1 1043 0
 1124 0004 FFF7FEFF 		bl	SPIM_1_EnableRxInt
1044:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_EnableTxInt();
 1125              		.loc 1 1044 0
 1126 0008 FFF7FEFF 		bl	SPIM_1_EnableTxInt
1045:Generated_Source\PSoC5/SPIM_1.c **** }
 1127              		.loc 1 1045 0
 1128 000c 00BF     		nop
 1129 000e 80BD     		pop	{r7, pc}
 1130              		.cfi_endproc
 1131              	.LFE22:
 1132              		.size	SPIM_1_EnableInt, .-SPIM_1_EnableInt
 1133              		.section	.text.SPIM_1_DisableInt,"ax",%progbits
 1134              		.align	2
 1135              		.global	SPIM_1_DisableInt
 1136              		.thumb
 1137              		.thumb_func
 1138              		.type	SPIM_1_DisableInt, %function
 1139              	SPIM_1_DisableInt:
 1140              	.LFB23:
1046:Generated_Source\PSoC5/SPIM_1.c **** 
1047:Generated_Source\PSoC5/SPIM_1.c **** 
1048:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_DisableInt
1050:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPIM_1.c **** *
1052:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
1053:Generated_Source\PSoC5/SPIM_1.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPIM_1.c **** *
1055:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
1056:Generated_Source\PSoC5/SPIM_1.c **** *  None.
1057:Generated_Source\PSoC5/SPIM_1.c **** *
1058:Generated_Source\PSoC5/SPIM_1.c **** * Return:
1059:Generated_Source\PSoC5/SPIM_1.c **** *  None.
1060:Generated_Source\PSoC5/SPIM_1.c **** *
1061:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
1062:Generated_Source\PSoC5/SPIM_1.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPIM_1.c **** *
1064:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_DisableInt(void) 
1066:Generated_Source\PSoC5/SPIM_1.c **** {
 1141              		.loc 1 1066 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 00AF     		add	r7, sp, #0
 1150              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_DisableTxInt();
 1151              		.loc 1 1067 0
 1152 0004 FFF7FEFF 		bl	SPIM_1_DisableTxInt
1068:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_DisableRxInt();
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 40


 1153              		.loc 1 1068 0
 1154 0008 FFF7FEFF 		bl	SPIM_1_DisableRxInt
1069:Generated_Source\PSoC5/SPIM_1.c **** }
 1155              		.loc 1 1069 0
 1156 000c 00BF     		nop
 1157 000e 80BD     		pop	{r7, pc}
 1158              		.cfi_endproc
 1159              	.LFE23:
 1160              		.size	SPIM_1_DisableInt, .-SPIM_1_DisableInt
 1161              		.section	.text.SPIM_1_SetInterruptMode,"ax",%progbits
 1162              		.align	2
 1163              		.global	SPIM_1_SetInterruptMode
 1164              		.thumb
 1165              		.thumb_func
 1166              		.type	SPIM_1_SetInterruptMode, %function
 1167              	SPIM_1_SetInterruptMode:
 1168              	.LFB24:
1070:Generated_Source\PSoC5/SPIM_1.c **** 
1071:Generated_Source\PSoC5/SPIM_1.c **** 
1072:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_SetInterruptMode
1074:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPIM_1.c **** *
1076:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
1077:Generated_Source\PSoC5/SPIM_1.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPIM_1.c **** *
1079:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
1080:Generated_Source\PSoC5/SPIM_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPIM_1.c **** *  header file).
1082:Generated_Source\PSoC5/SPIM_1.c **** *
1083:Generated_Source\PSoC5/SPIM_1.c **** * Return:
1084:Generated_Source\PSoC5/SPIM_1.c **** *  None.
1085:Generated_Source\PSoC5/SPIM_1.c **** *
1086:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
1087:Generated_Source\PSoC5/SPIM_1.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPIM_1.c **** *
1089:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPIM_1.c **** void SPIM_1_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPIM_1.c **** {
 1169              		.loc 1 1091 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 8
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 1174 0000 80B4     		push	{r7}
 1175              		.cfi_def_cfa_offset 4
 1176              		.cfi_offset 7, -4
 1177 0002 83B0     		sub	sp, sp, #12
 1178              		.cfi_def_cfa_offset 16
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 0346     		mov	r3, r0
 1182 0008 FB71     		strb	r3, [r7, #7]
1092:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_1_STS_SPI_IDLE));
 1183              		.loc 1 1092 0
 1184 000a 074A     		ldr	r2, .L78
 1185 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 41


 1186 000e 23F01003 		bic	r3, r3, #16
 1187 0012 DBB2     		uxtb	r3, r3
 1188 0014 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/SPIM_1.c ****     SPIM_1_RX_STATUS_MASK_REG  =  intSrc;
 1189              		.loc 1 1093 0
 1190 0016 054A     		ldr	r2, .L78+4
 1191 0018 FB79     		ldrb	r3, [r7, #7]
 1192 001a 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPIM_1.c **** }
 1193              		.loc 1 1094 0
 1194 001c 00BF     		nop
 1195 001e 0C37     		adds	r7, r7, #12
 1196              		.cfi_def_cfa_offset 4
 1197 0020 BD46     		mov	sp, r7
 1198              		.cfi_def_cfa_register 13
 1199              		@ sp needed
 1200 0022 80BC     		pop	{r7}
 1201              		.cfi_restore 7
 1202              		.cfi_def_cfa_offset 0
 1203 0024 7047     		bx	lr
 1204              	.L79:
 1205 0026 00BF     		.align	2
 1206              	.L78:
 1207 0028 82640040 		.word	1073767554
 1208 002c 85640040 		.word	1073767557
 1209              		.cfi_endproc
 1210              	.LFE24:
 1211              		.size	SPIM_1_SetInterruptMode, .-SPIM_1_SetInterruptMode
 1212              		.section	.text.SPIM_1_ReadStatus,"ax",%progbits
 1213              		.align	2
 1214              		.global	SPIM_1_ReadStatus
 1215              		.thumb
 1216              		.thumb_func
 1217              		.type	SPIM_1_ReadStatus, %function
 1218              	SPIM_1_ReadStatus:
 1219              	.LFB25:
1095:Generated_Source\PSoC5/SPIM_1.c **** 
1096:Generated_Source\PSoC5/SPIM_1.c **** 
1097:Generated_Source\PSoC5/SPIM_1.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPIM_1.c **** * Function Name: SPIM_1_ReadStatus
1099:Generated_Source\PSoC5/SPIM_1.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPIM_1.c **** *
1101:Generated_Source\PSoC5/SPIM_1.c **** * Summary:
1102:Generated_Source\PSoC5/SPIM_1.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPIM_1.c **** *
1104:Generated_Source\PSoC5/SPIM_1.c **** * Parameters:
1105:Generated_Source\PSoC5/SPIM_1.c **** *  None.
1106:Generated_Source\PSoC5/SPIM_1.c **** *
1107:Generated_Source\PSoC5/SPIM_1.c **** * Return:
1108:Generated_Source\PSoC5/SPIM_1.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPIM_1.c **** *
1110:Generated_Source\PSoC5/SPIM_1.c **** * Global variables:
1111:Generated_Source\PSoC5/SPIM_1.c **** *  SPIM_1_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPIM_1.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPIM_1.c **** *
1114:Generated_Source\PSoC5/SPIM_1.c **** * Theory:
1115:Generated_Source\PSoC5/SPIM_1.c **** *  Allows the user and the API to read the status register for error detection
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 42


1116:Generated_Source\PSoC5/SPIM_1.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPIM_1.c **** *
1118:Generated_Source\PSoC5/SPIM_1.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPIM_1.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPIM_1.c **** *
1121:Generated_Source\PSoC5/SPIM_1.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPIM_1.c **** *  No.
1123:Generated_Source\PSoC5/SPIM_1.c **** *
1124:Generated_Source\PSoC5/SPIM_1.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPIM_1.c **** uint8 SPIM_1_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPIM_1.c **** {
 1220              		.loc 1 1126 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 8
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225 0000 80B4     		push	{r7}
 1226              		.cfi_def_cfa_offset 4
 1227              		.cfi_offset 7, -4
 1228 0002 83B0     		sub	sp, sp, #12
 1229              		.cfi_def_cfa_offset 16
 1230 0004 00AF     		add	r7, sp, #0
 1231              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC5/SPIM_1.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPIM_1.c **** 
1129:Generated_Source\PSoC5/SPIM_1.c ****     #if(SPIM_1_TX_SOFTWARE_BUF_ENABLED || SPIM_1_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPIM_1.c **** 
1131:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_DisableInt();
1132:Generated_Source\PSoC5/SPIM_1.c **** 
1133:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus  = SPIM_1_GET_STATUS_RX(SPIM_1_swStatusRx);
1134:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus |= SPIM_1_GET_STATUS_TX(SPIM_1_swStatusTx);
1135:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus &= ((uint8) ~SPIM_1_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPIM_1.c **** 
1137:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPIM_1.c **** 
1140:Generated_Source\PSoC5/SPIM_1.c ****         SPIM_1_EnableInt();
1141:Generated_Source\PSoC5/SPIM_1.c **** 
1142:Generated_Source\PSoC5/SPIM_1.c ****     #else
1143:Generated_Source\PSoC5/SPIM_1.c **** 
1144:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus  = SPIM_1_RX_STATUS_REG;
 1232              		.loc 1 1144 0
 1233 0006 094B     		ldr	r3, .L82
 1234 0008 1B78     		ldrb	r3, [r3]
 1235 000a FB71     		strb	r3, [r7, #7]
1145:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus |= SPIM_1_TX_STATUS_REG;
 1236              		.loc 1 1145 0
 1237 000c 084B     		ldr	r3, .L82+4
 1238 000e 1B78     		ldrb	r3, [r3]
 1239 0010 DAB2     		uxtb	r2, r3
 1240 0012 FB79     		ldrb	r3, [r7, #7]
 1241 0014 1343     		orrs	r3, r3, r2
 1242 0016 FB71     		strb	r3, [r7, #7]
1146:Generated_Source\PSoC5/SPIM_1.c ****         tmpStatus &= ((uint8) ~SPIM_1_STS_SPI_IDLE);
 1243              		.loc 1 1146 0
 1244 0018 FB79     		ldrb	r3, [r7, #7]
 1245 001a 23F01003 		bic	r3, r3, #16
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 43


 1246 001e FB71     		strb	r3, [r7, #7]
1147:Generated_Source\PSoC5/SPIM_1.c **** 
1148:Generated_Source\PSoC5/SPIM_1.c ****     #endif /* (SPIM_1_TX_SOFTWARE_BUF_ENABLED || SPIM_1_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPIM_1.c **** 
1150:Generated_Source\PSoC5/SPIM_1.c ****     return(tmpStatus);
 1247              		.loc 1 1150 0
 1248 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:Generated_Source\PSoC5/SPIM_1.c **** }
 1249              		.loc 1 1151 0
 1250 0022 1846     		mov	r0, r3
 1251 0024 0C37     		adds	r7, r7, #12
 1252              		.cfi_def_cfa_offset 4
 1253 0026 BD46     		mov	sp, r7
 1254              		.cfi_def_cfa_register 13
 1255              		@ sp needed
 1256 0028 80BC     		pop	{r7}
 1257              		.cfi_restore 7
 1258              		.cfi_def_cfa_offset 0
 1259 002a 7047     		bx	lr
 1260              	.L83:
 1261              		.align	2
 1262              	.L82:
 1263 002c 65640040 		.word	1073767525
 1264 0030 62640040 		.word	1073767522
 1265              		.cfi_endproc
 1266              	.LFE25:
 1267              		.size	SPIM_1_ReadStatus, .-SPIM_1_ReadStatus
 1268              		.text
 1269              	.Letext0:
 1270              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1271              		.section	.debug_info,"",%progbits
 1272              	.Ldebug_info0:
 1273 0000 14040000 		.4byte	0x414
 1274 0004 0400     		.2byte	0x4
 1275 0006 00000000 		.4byte	.Ldebug_abbrev0
 1276 000a 04       		.byte	0x4
 1277 000b 01       		.uleb128 0x1
 1278 000c 00000000 		.4byte	.LASF54
 1279 0010 0C       		.byte	0xc
 1280 0011 32030000 		.4byte	.LASF55
 1281 0015 77020000 		.4byte	.LASF56
 1282 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1283 001d 00000000 		.4byte	0
 1284 0021 00000000 		.4byte	.Ldebug_line0
 1285 0025 02       		.uleb128 0x2
 1286 0026 01       		.byte	0x1
 1287 0027 06       		.byte	0x6
 1288 0028 FB030000 		.4byte	.LASF0
 1289 002c 02       		.uleb128 0x2
 1290 002d 01       		.byte	0x1
 1291 002e 08       		.byte	0x8
 1292 002f D9010000 		.4byte	.LASF1
 1293 0033 02       		.uleb128 0x2
 1294 0034 02       		.byte	0x2
 1295 0035 05       		.byte	0x5
 1296 0036 92030000 		.4byte	.LASF2
 1297 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 44


 1298 003b 02       		.byte	0x2
 1299 003c 07       		.byte	0x7
 1300 003d EF000000 		.4byte	.LASF3
 1301 0041 02       		.uleb128 0x2
 1302 0042 04       		.byte	0x4
 1303 0043 05       		.byte	0x5
 1304 0044 CA030000 		.4byte	.LASF4
 1305 0048 02       		.uleb128 0x2
 1306 0049 04       		.byte	0x4
 1307 004a 07       		.byte	0x7
 1308 004b 9F010000 		.4byte	.LASF5
 1309 004f 02       		.uleb128 0x2
 1310 0050 08       		.byte	0x8
 1311 0051 05       		.byte	0x5
 1312 0052 5B030000 		.4byte	.LASF6
 1313 0056 02       		.uleb128 0x2
 1314 0057 08       		.byte	0x8
 1315 0058 07       		.byte	0x7
 1316 0059 60020000 		.4byte	.LASF7
 1317 005d 03       		.uleb128 0x3
 1318 005e 04       		.byte	0x4
 1319 005f 05       		.byte	0x5
 1320 0060 696E7400 		.ascii	"int\000"
 1321 0064 02       		.uleb128 0x2
 1322 0065 04       		.byte	0x4
 1323 0066 07       		.byte	0x7
 1324 0067 02010000 		.4byte	.LASF8
 1325 006b 04       		.uleb128 0x4
 1326 006c B1010000 		.4byte	.LASF12
 1327 0070 02       		.byte	0x2
 1328 0071 9201     		.2byte	0x192
 1329 0073 2C000000 		.4byte	0x2c
 1330 0077 02       		.uleb128 0x2
 1331 0078 04       		.byte	0x4
 1332 0079 04       		.byte	0x4
 1333 007a 69030000 		.4byte	.LASF9
 1334 007e 02       		.uleb128 0x2
 1335 007f 08       		.byte	0x8
 1336 0080 04       		.byte	0x4
 1337 0081 F9010000 		.4byte	.LASF10
 1338 0085 02       		.uleb128 0x2
 1339 0086 01       		.byte	0x1
 1340 0087 08       		.byte	0x8
 1341 0088 6F030000 		.4byte	.LASF11
 1342 008c 04       		.uleb128 0x4
 1343 008d 9A010000 		.4byte	.LASF13
 1344 0091 02       		.byte	0x2
 1345 0092 3C02     		.2byte	0x23c
 1346 0094 98000000 		.4byte	0x98
 1347 0098 05       		.uleb128 0x5
 1348 0099 6B000000 		.4byte	0x6b
 1349 009d 02       		.uleb128 0x2
 1350 009e 08       		.byte	0x8
 1351 009f 04       		.byte	0x4
 1352 00a0 DD030000 		.4byte	.LASF14
 1353 00a4 02       		.uleb128 0x2
 1354 00a5 04       		.byte	0x4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 45


 1355 00a6 07       		.byte	0x7
 1356 00a7 52030000 		.4byte	.LASF15
 1357 00ab 06       		.uleb128 0x6
 1358 00ac 18020000 		.4byte	.LASF16
 1359 00b0 01       		.byte	0x1
 1360 00b1 3F       		.byte	0x3f
 1361 00b2 00000000 		.4byte	.LFB0
 1362 00b6 34000000 		.4byte	.LFE0-.LFB0
 1363 00ba 01       		.uleb128 0x1
 1364 00bb 9C       		.byte	0x9c
 1365 00bc 07       		.uleb128 0x7
 1366 00bd B9000000 		.4byte	.LASF18
 1367 00c1 01       		.byte	0x1
 1368 00c2 78       		.byte	0x78
 1369 00c3 00000000 		.4byte	.LFB1
 1370 00c7 68000000 		.4byte	.LFE1-.LFB1
 1371 00cb 01       		.uleb128 0x1
 1372 00cc 9C       		.byte	0x9c
 1373 00cd E0000000 		.4byte	0xe0
 1374 00d1 08       		.uleb128 0x8
 1375 00d2 C8010000 		.4byte	.LASF20
 1376 00d6 01       		.byte	0x1
 1377 00d7 7A       		.byte	0x7a
 1378 00d8 6B000000 		.4byte	0x6b
 1379 00dc 02       		.uleb128 0x2
 1380 00dd 91       		.byte	0x91
 1381 00de 77       		.sleb128 -9
 1382 00df 00       		.byte	0
 1383 00e0 06       		.uleb128 0x6
 1384 00e1 A5000000 		.4byte	.LASF17
 1385 00e5 01       		.byte	0x1
 1386 00e6 A3       		.byte	0xa3
 1387 00e7 00000000 		.4byte	.LFB2
 1388 00eb 24000000 		.4byte	.LFE2-.LFB2
 1389 00ef 01       		.uleb128 0x1
 1390 00f0 9C       		.byte	0x9c
 1391 00f1 07       		.uleb128 0x7
 1392 00f2 74030000 		.4byte	.LASF19
 1393 00f6 01       		.byte	0x1
 1394 00f7 C0       		.byte	0xc0
 1395 00f8 00000000 		.4byte	.LFB3
 1396 00fc 54000000 		.4byte	.LFE3-.LFB3
 1397 0100 01       		.uleb128 0x1
 1398 0101 9C       		.byte	0x9c
 1399 0102 15010000 		.4byte	0x115
 1400 0106 08       		.uleb128 0x8
 1401 0107 C8010000 		.4byte	.LASF20
 1402 010b 01       		.byte	0x1
 1403 010c C2       		.byte	0xc2
 1404 010d 6B000000 		.4byte	0x6b
 1405 0111 02       		.uleb128 0x2
 1406 0112 91       		.byte	0x91
 1407 0113 77       		.sleb128 -9
 1408 0114 00       		.byte	0
 1409 0115 09       		.uleb128 0x9
 1410 0116 C7000000 		.4byte	.LASF21
 1411 011a 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 46


 1412 011b E3       		.byte	0xe3
 1413 011c 00000000 		.4byte	.LFB4
 1414 0120 0C000000 		.4byte	.LFE4-.LFB4
 1415 0124 01       		.uleb128 0x1
 1416 0125 9C       		.byte	0x9c
 1417 0126 09       		.uleb128 0x9
 1418 0127 F0020000 		.4byte	.LASF22
 1419 012b 01       		.byte	0x1
 1420 012c FC       		.byte	0xfc
 1421 012d 00000000 		.4byte	.LFB5
 1422 0131 0C000000 		.4byte	.LFE5-.LFB5
 1423 0135 01       		.uleb128 0x1
 1424 0136 9C       		.byte	0x9c
 1425 0137 0A       		.uleb128 0xa
 1426 0138 0C030000 		.4byte	.LASF23
 1427 013c 01       		.byte	0x1
 1428 013d 1501     		.2byte	0x115
 1429 013f 00000000 		.4byte	.LFB6
 1430 0143 0C000000 		.4byte	.LFE6-.LFB6
 1431 0147 01       		.uleb128 0x1
 1432 0148 9C       		.byte	0x9c
 1433 0149 0A       		.uleb128 0xa
 1434 014a 1A040000 		.4byte	.LASF24
 1435 014e 01       		.byte	0x1
 1436 014f 2E01     		.2byte	0x12e
 1437 0151 00000000 		.4byte	.LFB7
 1438 0155 0C000000 		.4byte	.LFE7-.LFB7
 1439 0159 01       		.uleb128 0x1
 1440 015a 9C       		.byte	0x9c
 1441 015b 0B       		.uleb128 0xb
 1442 015c 2D010000 		.4byte	.LASF25
 1443 0160 01       		.byte	0x1
 1444 0161 4801     		.2byte	0x148
 1445 0163 00000000 		.4byte	.LFB8
 1446 0167 20000000 		.4byte	.LFE8-.LFB8
 1447 016b 01       		.uleb128 0x1
 1448 016c 9C       		.byte	0x9c
 1449 016d 81010000 		.4byte	0x181
 1450 0171 0C       		.uleb128 0xc
 1451 0172 00020000 		.4byte	.LASF27
 1452 0176 01       		.byte	0x1
 1453 0177 4801     		.2byte	0x148
 1454 0179 6B000000 		.4byte	0x6b
 1455 017d 02       		.uleb128 0x2
 1456 017e 91       		.byte	0x91
 1457 017f 77       		.sleb128 -9
 1458 0180 00       		.byte	0
 1459 0181 0B       		.uleb128 0xb
 1460 0182 5B010000 		.4byte	.LASF26
 1461 0186 01       		.byte	0x1
 1462 0187 6001     		.2byte	0x160
 1463 0189 00000000 		.4byte	.LFB9
 1464 018d 20000000 		.4byte	.LFE9-.LFB9
 1465 0191 01       		.uleb128 0x1
 1466 0192 9C       		.byte	0x9c
 1467 0193 A7010000 		.4byte	0x1a7
 1468 0197 0C       		.uleb128 0xc
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 47


 1469 0198 00020000 		.4byte	.LASF27
 1470 019c 01       		.byte	0x1
 1471 019d 6001     		.2byte	0x160
 1472 019f 6B000000 		.4byte	0x6b
 1473 01a3 02       		.uleb128 0x2
 1474 01a4 91       		.byte	0x91
 1475 01a5 77       		.sleb128 -9
 1476 01a6 00       		.byte	0
 1477 01a7 0D       		.uleb128 0xd
 1478 01a8 47010000 		.4byte	.LASF29
 1479 01ac 01       		.byte	0x1
 1480 01ad 8201     		.2byte	0x182
 1481 01af 6B000000 		.4byte	0x6b
 1482 01b3 00000000 		.4byte	.LFB10
 1483 01b7 1C000000 		.4byte	.LFE10-.LFB10
 1484 01bb 01       		.uleb128 0x1
 1485 01bc 9C       		.byte	0x9c
 1486 01bd D1010000 		.4byte	0x1d1
 1487 01c1 0E       		.uleb128 0xe
 1488 01c2 D3030000 		.4byte	.LASF28
 1489 01c6 01       		.byte	0x1
 1490 01c7 8401     		.2byte	0x184
 1491 01c9 6B000000 		.4byte	0x6b
 1492 01cd 02       		.uleb128 0x2
 1493 01ce 91       		.byte	0x91
 1494 01cf 77       		.sleb128 -9
 1495 01d0 00       		.byte	0
 1496 01d1 0D       		.uleb128 0xd
 1497 01d2 4C020000 		.4byte	.LASF30
 1498 01d6 01       		.byte	0x1
 1499 01d7 B501     		.2byte	0x1b5
 1500 01d9 6B000000 		.4byte	0x6b
 1501 01dd 00000000 		.4byte	.LFB11
 1502 01e1 1C000000 		.4byte	.LFE11-.LFB11
 1503 01e5 01       		.uleb128 0x1
 1504 01e6 9C       		.byte	0x9c
 1505 01e7 FB010000 		.4byte	0x1fb
 1506 01eb 0E       		.uleb128 0xe
 1507 01ec D3030000 		.4byte	.LASF28
 1508 01f0 01       		.byte	0x1
 1509 01f1 B701     		.2byte	0x1b7
 1510 01f3 6B000000 		.4byte	0x6b
 1511 01f7 02       		.uleb128 0x2
 1512 01f8 91       		.byte	0x91
 1513 01f9 77       		.sleb128 -9
 1514 01fa 00       		.byte	0
 1515 01fb 0B       		.uleb128 0xb
 1516 01fc 07040000 		.4byte	.LASF31
 1517 0200 01       		.byte	0x1
 1518 0201 EE01     		.2byte	0x1ee
 1519 0203 00000000 		.4byte	.LFB12
 1520 0207 34000000 		.4byte	.LFE12-.LFB12
 1521 020b 01       		.uleb128 0x1
 1522 020c 9C       		.byte	0x9c
 1523 020d 21020000 		.4byte	0x221
 1524 0211 0C       		.uleb128 0xc
 1525 0212 0F010000 		.4byte	.LASF32
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 48


 1526 0216 01       		.byte	0x1
 1527 0217 EE01     		.2byte	0x1ee
 1528 0219 6B000000 		.4byte	0x6b
 1529 021d 02       		.uleb128 0x2
 1530 021e 91       		.byte	0x91
 1531 021f 77       		.sleb128 -9
 1532 0220 00       		.byte	0
 1533 0221 0D       		.uleb128 0xd
 1534 0222 80030000 		.4byte	.LASF33
 1535 0226 01       		.byte	0x1
 1536 0227 5A02     		.2byte	0x25a
 1537 0229 6B000000 		.4byte	0x6b
 1538 022d 00000000 		.4byte	.LFB13
 1539 0231 1C000000 		.4byte	.LFE13-.LFB13
 1540 0235 01       		.uleb128 0x1
 1541 0236 9C       		.byte	0x9c
 1542 0237 4B020000 		.4byte	0x24b
 1543 023b 0E       		.uleb128 0xe
 1544 023c B2000000 		.4byte	.LASF34
 1545 0240 01       		.byte	0x1
 1546 0241 5C02     		.2byte	0x25c
 1547 0243 6B000000 		.4byte	0x6b
 1548 0247 02       		.uleb128 0x2
 1549 0248 91       		.byte	0x91
 1550 0249 77       		.sleb128 -9
 1551 024a 00       		.byte	0
 1552 024b 0D       		.uleb128 0xd
 1553 024c 16010000 		.4byte	.LASF35
 1554 0250 01       		.byte	0x1
 1555 0251 9A02     		.2byte	0x29a
 1556 0253 6B000000 		.4byte	0x6b
 1557 0257 00000000 		.4byte	.LFB14
 1558 025b 2C000000 		.4byte	.LFE14-.LFB14
 1559 025f 01       		.uleb128 0x1
 1560 0260 9C       		.byte	0x9c
 1561 0261 75020000 		.4byte	0x275
 1562 0265 0E       		.uleb128 0xe
 1563 0266 95010000 		.4byte	.LASF36
 1564 026a 01       		.byte	0x1
 1565 026b 9C02     		.2byte	0x29c
 1566 026d 6B000000 		.4byte	0x6b
 1567 0271 02       		.uleb128 0x2
 1568 0272 91       		.byte	0x91
 1569 0273 77       		.sleb128 -9
 1570 0274 00       		.byte	0
 1571 0275 0D       		.uleb128 0xd
 1572 0276 8E000000 		.4byte	.LASF37
 1573 027a 01       		.byte	0x1
 1574 027b D702     		.2byte	0x2d7
 1575 027d 6B000000 		.4byte	0x6b
 1576 0281 00000000 		.4byte	.LFB15
 1577 0285 40000000 		.4byte	.LFE15-.LFB15
 1578 0289 01       		.uleb128 0x1
 1579 028a 9C       		.byte	0x9c
 1580 028b 9F020000 		.4byte	0x29f
 1581 028f 0E       		.uleb128 0xe
 1582 0290 95010000 		.4byte	.LASF36
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 49


 1583 0294 01       		.byte	0x1
 1584 0295 D902     		.2byte	0x2d9
 1585 0297 6B000000 		.4byte	0x6b
 1586 029b 02       		.uleb128 0x2
 1587 029c 91       		.byte	0x91
 1588 029d 77       		.sleb128 -9
 1589 029e 00       		.byte	0
 1590 029f 0A       		.uleb128 0xa
 1591 02a0 9C030000 		.4byte	.LASF38
 1592 02a4 01       		.byte	0x1
 1593 02a5 2603     		.2byte	0x326
 1594 02a7 00000000 		.4byte	.LFB16
 1595 02ab 28000000 		.4byte	.LFE16-.LFB16
 1596 02af 01       		.uleb128 0x1
 1597 02b0 9C       		.byte	0x9c
 1598 02b1 0F       		.uleb128 0xf
 1599 02b2 DA000000 		.4byte	.LASF39
 1600 02b6 01       		.byte	0x1
 1601 02b7 5D03     		.2byte	0x35d
 1602 02b9 00000000 		.4byte	.LFB17
 1603 02bd 44000000 		.4byte	.LFE17-.LFB17
 1604 02c1 01       		.uleb128 0x1
 1605 02c2 9C       		.byte	0x9c
 1606 02c3 D7020000 		.4byte	0x2d7
 1607 02c7 0E       		.uleb128 0xe
 1608 02c8 C8010000 		.4byte	.LASF20
 1609 02cc 01       		.byte	0x1
 1610 02cd 5F03     		.2byte	0x35f
 1611 02cf 6B000000 		.4byte	0x6b
 1612 02d3 02       		.uleb128 0x2
 1613 02d4 91       		.byte	0x91
 1614 02d5 77       		.sleb128 -9
 1615 02d6 00       		.byte	0
 1616 02d7 0A       		.uleb128 0xa
 1617 02d8 2E040000 		.4byte	.LASF40
 1618 02dc 01       		.byte	0x1
 1619 02dd 8D03     		.2byte	0x38d
 1620 02df 00000000 		.4byte	.LFB18
 1621 02e3 20000000 		.4byte	.LFE18-.LFB18
 1622 02e7 01       		.uleb128 0x1
 1623 02e8 9C       		.byte	0x9c
 1624 02e9 0A       		.uleb128 0xa
 1625 02ea 84010000 		.4byte	.LASF41
 1626 02ee 01       		.byte	0x1
 1627 02ef A203     		.2byte	0x3a2
 1628 02f1 00000000 		.4byte	.LFB19
 1629 02f5 20000000 		.4byte	.LFE19-.LFB19
 1630 02f9 01       		.uleb128 0x1
 1631 02fa 9C       		.byte	0x9c
 1632 02fb 0F       		.uleb128 0xf
 1633 02fc 24020000 		.4byte	.LASF42
 1634 0300 01       		.byte	0x1
 1635 0301 C203     		.2byte	0x3c2
 1636 0303 00000000 		.4byte	.LFB20
 1637 0307 3A000000 		.4byte	.LFE20-.LFB20
 1638 030b 01       		.uleb128 0x1
 1639 030c 9C       		.byte	0x9c
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 50


 1640 030d 3F030000 		.4byte	0x33f
 1641 0311 0C       		.uleb128 0xc
 1642 0312 B1030000 		.4byte	.LASF43
 1643 0316 01       		.byte	0x1
 1644 0317 C203     		.2byte	0x3c2
 1645 0319 3F030000 		.4byte	0x33f
 1646 031d 02       		.uleb128 0x2
 1647 031e 91       		.byte	0x91
 1648 031f 6C       		.sleb128 -20
 1649 0320 0C       		.uleb128 0xc
 1650 0321 E6020000 		.4byte	.LASF44
 1651 0325 01       		.byte	0x1
 1652 0326 C203     		.2byte	0x3c2
 1653 0328 6B000000 		.4byte	0x6b
 1654 032c 02       		.uleb128 0x2
 1655 032d 91       		.byte	0x91
 1656 032e 6B       		.sleb128 -21
 1657 032f 0E       		.uleb128 0xe
 1658 0330 03030000 		.4byte	.LASF45
 1659 0334 01       		.byte	0x1
 1660 0335 C503     		.2byte	0x3c5
 1661 0337 6B000000 		.4byte	0x6b
 1662 033b 02       		.uleb128 0x2
 1663 033c 91       		.byte	0x91
 1664 033d 77       		.sleb128 -9
 1665 033e 00       		.byte	0
 1666 033f 10       		.uleb128 0x10
 1667 0340 04       		.byte	0x4
 1668 0341 45030000 		.4byte	0x345
 1669 0345 11       		.uleb128 0x11
 1670 0346 6B000000 		.4byte	0x6b
 1671 034a 0F       		.uleb128 0xf
 1672 034b 07020000 		.4byte	.LASF46
 1673 034f 01       		.byte	0x1
 1674 0350 E303     		.2byte	0x3e3
 1675 0352 00000000 		.4byte	.LFB21
 1676 0356 60000000 		.4byte	.LFE21-.LFB21
 1677 035a 01       		.uleb128 0x1
 1678 035b 9C       		.byte	0x9c
 1679 035c 70030000 		.4byte	0x370
 1680 0360 0E       		.uleb128 0xe
 1681 0361 C8010000 		.4byte	.LASF20
 1682 0365 01       		.byte	0x1
 1683 0366 E503     		.2byte	0x3e5
 1684 0368 6B000000 		.4byte	0x6b
 1685 036c 02       		.uleb128 0x2
 1686 036d 91       		.byte	0x91
 1687 036e 77       		.sleb128 -9
 1688 036f 00       		.byte	0
 1689 0370 12       		.uleb128 0x12
 1690 0371 B7010000 		.4byte	.LASF47
 1691 0375 01       		.byte	0x1
 1692 0376 1104     		.2byte	0x411
 1693 0378 00000000 		.4byte	.LFB22
 1694 037c 10000000 		.4byte	.LFE22-.LFB22
 1695 0380 01       		.uleb128 0x1
 1696 0381 9C       		.byte	0x9c
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 51


 1697 0382 12       		.uleb128 0x12
 1698 0383 E7010000 		.4byte	.LASF48
 1699 0387 01       		.byte	0x1
 1700 0388 2904     		.2byte	0x429
 1701 038a 00000000 		.4byte	.LFB23
 1702 038e 10000000 		.4byte	.LFE23-.LFB23
 1703 0392 01       		.uleb128 0x1
 1704 0393 9C       		.byte	0x9c
 1705 0394 0B       		.uleb128 0xb
 1706 0395 34020000 		.4byte	.LASF49
 1707 0399 01       		.byte	0x1
 1708 039a 4204     		.2byte	0x442
 1709 039c 00000000 		.4byte	.LFB24
 1710 03a0 30000000 		.4byte	.LFE24-.LFB24
 1711 03a4 01       		.uleb128 0x1
 1712 03a5 9C       		.byte	0x9c
 1713 03a6 BA030000 		.4byte	0x3ba
 1714 03aa 0C       		.uleb128 0xc
 1715 03ab 00020000 		.4byte	.LASF27
 1716 03af 01       		.byte	0x1
 1717 03b0 4204     		.2byte	0x442
 1718 03b2 6B000000 		.4byte	0x6b
 1719 03b6 02       		.uleb128 0x2
 1720 03b7 91       		.byte	0x91
 1721 03b8 77       		.sleb128 -9
 1722 03b9 00       		.byte	0
 1723 03ba 0D       		.uleb128 0xd
 1724 03bb 20030000 		.4byte	.LASF50
 1725 03bf 01       		.byte	0x1
 1726 03c0 6504     		.2byte	0x465
 1727 03c2 6B000000 		.4byte	0x6b
 1728 03c6 00000000 		.4byte	.LFB25
 1729 03ca 34000000 		.4byte	.LFE25-.LFB25
 1730 03ce 01       		.uleb128 0x1
 1731 03cf 9C       		.byte	0x9c
 1732 03d0 E4030000 		.4byte	0x3e4
 1733 03d4 0E       		.uleb128 0xe
 1734 03d5 D3030000 		.4byte	.LASF28
 1735 03d9 01       		.byte	0x1
 1736 03da 6704     		.2byte	0x467
 1737 03dc 6B000000 		.4byte	0x6b
 1738 03e0 02       		.uleb128 0x2
 1739 03e1 91       		.byte	0x91
 1740 03e2 77       		.sleb128 -9
 1741 03e3 00       		.byte	0
 1742 03e4 13       		.uleb128 0x13
 1743 03e5 75010000 		.4byte	.LASF51
 1744 03e9 01       		.byte	0x1
 1745 03ea 22       		.byte	0x22
 1746 03eb 6B000000 		.4byte	0x6b
 1747 03ef 05       		.uleb128 0x5
 1748 03f0 03       		.byte	0x3
 1749 03f1 00000000 		.4byte	SPIM_1_initVar
 1750 03f5 13       		.uleb128 0x13
 1751 03f6 E9030000 		.4byte	.LASF52
 1752 03fa 01       		.byte	0x1
 1753 03fb 24       		.byte	0x24
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 52


 1754 03fc 98000000 		.4byte	0x98
 1755 0400 05       		.uleb128 0x5
 1756 0401 03       		.byte	0x3
 1757 0402 00000000 		.4byte	SPIM_1_swStatusTx
 1758 0406 13       		.uleb128 0x13
 1759 0407 B8030000 		.4byte	.LASF53
 1760 040b 01       		.byte	0x1
 1761 040c 25       		.byte	0x25
 1762 040d 98000000 		.4byte	0x98
 1763 0411 05       		.uleb128 0x5
 1764 0412 03       		.byte	0x3
 1765 0413 00000000 		.4byte	SPIM_1_swStatusRx
 1766 0417 00       		.byte	0
 1767              		.section	.debug_abbrev,"",%progbits
 1768              	.Ldebug_abbrev0:
 1769 0000 01       		.uleb128 0x1
 1770 0001 11       		.uleb128 0x11
 1771 0002 01       		.byte	0x1
 1772 0003 25       		.uleb128 0x25
 1773 0004 0E       		.uleb128 0xe
 1774 0005 13       		.uleb128 0x13
 1775 0006 0B       		.uleb128 0xb
 1776 0007 03       		.uleb128 0x3
 1777 0008 0E       		.uleb128 0xe
 1778 0009 1B       		.uleb128 0x1b
 1779 000a 0E       		.uleb128 0xe
 1780 000b 55       		.uleb128 0x55
 1781 000c 17       		.uleb128 0x17
 1782 000d 11       		.uleb128 0x11
 1783 000e 01       		.uleb128 0x1
 1784 000f 10       		.uleb128 0x10
 1785 0010 17       		.uleb128 0x17
 1786 0011 00       		.byte	0
 1787 0012 00       		.byte	0
 1788 0013 02       		.uleb128 0x2
 1789 0014 24       		.uleb128 0x24
 1790 0015 00       		.byte	0
 1791 0016 0B       		.uleb128 0xb
 1792 0017 0B       		.uleb128 0xb
 1793 0018 3E       		.uleb128 0x3e
 1794 0019 0B       		.uleb128 0xb
 1795 001a 03       		.uleb128 0x3
 1796 001b 0E       		.uleb128 0xe
 1797 001c 00       		.byte	0
 1798 001d 00       		.byte	0
 1799 001e 03       		.uleb128 0x3
 1800 001f 24       		.uleb128 0x24
 1801 0020 00       		.byte	0
 1802 0021 0B       		.uleb128 0xb
 1803 0022 0B       		.uleb128 0xb
 1804 0023 3E       		.uleb128 0x3e
 1805 0024 0B       		.uleb128 0xb
 1806 0025 03       		.uleb128 0x3
 1807 0026 08       		.uleb128 0x8
 1808 0027 00       		.byte	0
 1809 0028 00       		.byte	0
 1810 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 53


 1811 002a 16       		.uleb128 0x16
 1812 002b 00       		.byte	0
 1813 002c 03       		.uleb128 0x3
 1814 002d 0E       		.uleb128 0xe
 1815 002e 3A       		.uleb128 0x3a
 1816 002f 0B       		.uleb128 0xb
 1817 0030 3B       		.uleb128 0x3b
 1818 0031 05       		.uleb128 0x5
 1819 0032 49       		.uleb128 0x49
 1820 0033 13       		.uleb128 0x13
 1821 0034 00       		.byte	0
 1822 0035 00       		.byte	0
 1823 0036 05       		.uleb128 0x5
 1824 0037 35       		.uleb128 0x35
 1825 0038 00       		.byte	0
 1826 0039 49       		.uleb128 0x49
 1827 003a 13       		.uleb128 0x13
 1828 003b 00       		.byte	0
 1829 003c 00       		.byte	0
 1830 003d 06       		.uleb128 0x6
 1831 003e 2E       		.uleb128 0x2e
 1832 003f 00       		.byte	0
 1833 0040 3F       		.uleb128 0x3f
 1834 0041 19       		.uleb128 0x19
 1835 0042 03       		.uleb128 0x3
 1836 0043 0E       		.uleb128 0xe
 1837 0044 3A       		.uleb128 0x3a
 1838 0045 0B       		.uleb128 0xb
 1839 0046 3B       		.uleb128 0x3b
 1840 0047 0B       		.uleb128 0xb
 1841 0048 27       		.uleb128 0x27
 1842 0049 19       		.uleb128 0x19
 1843 004a 11       		.uleb128 0x11
 1844 004b 01       		.uleb128 0x1
 1845 004c 12       		.uleb128 0x12
 1846 004d 06       		.uleb128 0x6
 1847 004e 40       		.uleb128 0x40
 1848 004f 18       		.uleb128 0x18
 1849 0050 9642     		.uleb128 0x2116
 1850 0052 19       		.uleb128 0x19
 1851 0053 00       		.byte	0
 1852 0054 00       		.byte	0
 1853 0055 07       		.uleb128 0x7
 1854 0056 2E       		.uleb128 0x2e
 1855 0057 01       		.byte	0x1
 1856 0058 3F       		.uleb128 0x3f
 1857 0059 19       		.uleb128 0x19
 1858 005a 03       		.uleb128 0x3
 1859 005b 0E       		.uleb128 0xe
 1860 005c 3A       		.uleb128 0x3a
 1861 005d 0B       		.uleb128 0xb
 1862 005e 3B       		.uleb128 0x3b
 1863 005f 0B       		.uleb128 0xb
 1864 0060 27       		.uleb128 0x27
 1865 0061 19       		.uleb128 0x19
 1866 0062 11       		.uleb128 0x11
 1867 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 54


 1868 0064 12       		.uleb128 0x12
 1869 0065 06       		.uleb128 0x6
 1870 0066 40       		.uleb128 0x40
 1871 0067 18       		.uleb128 0x18
 1872 0068 9642     		.uleb128 0x2116
 1873 006a 19       		.uleb128 0x19
 1874 006b 01       		.uleb128 0x1
 1875 006c 13       		.uleb128 0x13
 1876 006d 00       		.byte	0
 1877 006e 00       		.byte	0
 1878 006f 08       		.uleb128 0x8
 1879 0070 34       		.uleb128 0x34
 1880 0071 00       		.byte	0
 1881 0072 03       		.uleb128 0x3
 1882 0073 0E       		.uleb128 0xe
 1883 0074 3A       		.uleb128 0x3a
 1884 0075 0B       		.uleb128 0xb
 1885 0076 3B       		.uleb128 0x3b
 1886 0077 0B       		.uleb128 0xb
 1887 0078 49       		.uleb128 0x49
 1888 0079 13       		.uleb128 0x13
 1889 007a 02       		.uleb128 0x2
 1890 007b 18       		.uleb128 0x18
 1891 007c 00       		.byte	0
 1892 007d 00       		.byte	0
 1893 007e 09       		.uleb128 0x9
 1894 007f 2E       		.uleb128 0x2e
 1895 0080 00       		.byte	0
 1896 0081 3F       		.uleb128 0x3f
 1897 0082 19       		.uleb128 0x19
 1898 0083 03       		.uleb128 0x3
 1899 0084 0E       		.uleb128 0xe
 1900 0085 3A       		.uleb128 0x3a
 1901 0086 0B       		.uleb128 0xb
 1902 0087 3B       		.uleb128 0x3b
 1903 0088 0B       		.uleb128 0xb
 1904 0089 27       		.uleb128 0x27
 1905 008a 19       		.uleb128 0x19
 1906 008b 11       		.uleb128 0x11
 1907 008c 01       		.uleb128 0x1
 1908 008d 12       		.uleb128 0x12
 1909 008e 06       		.uleb128 0x6
 1910 008f 40       		.uleb128 0x40
 1911 0090 18       		.uleb128 0x18
 1912 0091 9742     		.uleb128 0x2117
 1913 0093 19       		.uleb128 0x19
 1914 0094 00       		.byte	0
 1915 0095 00       		.byte	0
 1916 0096 0A       		.uleb128 0xa
 1917 0097 2E       		.uleb128 0x2e
 1918 0098 00       		.byte	0
 1919 0099 3F       		.uleb128 0x3f
 1920 009a 19       		.uleb128 0x19
 1921 009b 03       		.uleb128 0x3
 1922 009c 0E       		.uleb128 0xe
 1923 009d 3A       		.uleb128 0x3a
 1924 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 55


 1925 009f 3B       		.uleb128 0x3b
 1926 00a0 05       		.uleb128 0x5
 1927 00a1 27       		.uleb128 0x27
 1928 00a2 19       		.uleb128 0x19
 1929 00a3 11       		.uleb128 0x11
 1930 00a4 01       		.uleb128 0x1
 1931 00a5 12       		.uleb128 0x12
 1932 00a6 06       		.uleb128 0x6
 1933 00a7 40       		.uleb128 0x40
 1934 00a8 18       		.uleb128 0x18
 1935 00a9 9742     		.uleb128 0x2117
 1936 00ab 19       		.uleb128 0x19
 1937 00ac 00       		.byte	0
 1938 00ad 00       		.byte	0
 1939 00ae 0B       		.uleb128 0xb
 1940 00af 2E       		.uleb128 0x2e
 1941 00b0 01       		.byte	0x1
 1942 00b1 3F       		.uleb128 0x3f
 1943 00b2 19       		.uleb128 0x19
 1944 00b3 03       		.uleb128 0x3
 1945 00b4 0E       		.uleb128 0xe
 1946 00b5 3A       		.uleb128 0x3a
 1947 00b6 0B       		.uleb128 0xb
 1948 00b7 3B       		.uleb128 0x3b
 1949 00b8 05       		.uleb128 0x5
 1950 00b9 27       		.uleb128 0x27
 1951 00ba 19       		.uleb128 0x19
 1952 00bb 11       		.uleb128 0x11
 1953 00bc 01       		.uleb128 0x1
 1954 00bd 12       		.uleb128 0x12
 1955 00be 06       		.uleb128 0x6
 1956 00bf 40       		.uleb128 0x40
 1957 00c0 18       		.uleb128 0x18
 1958 00c1 9742     		.uleb128 0x2117
 1959 00c3 19       		.uleb128 0x19
 1960 00c4 01       		.uleb128 0x1
 1961 00c5 13       		.uleb128 0x13
 1962 00c6 00       		.byte	0
 1963 00c7 00       		.byte	0
 1964 00c8 0C       		.uleb128 0xc
 1965 00c9 05       		.uleb128 0x5
 1966 00ca 00       		.byte	0
 1967 00cb 03       		.uleb128 0x3
 1968 00cc 0E       		.uleb128 0xe
 1969 00cd 3A       		.uleb128 0x3a
 1970 00ce 0B       		.uleb128 0xb
 1971 00cf 3B       		.uleb128 0x3b
 1972 00d0 05       		.uleb128 0x5
 1973 00d1 49       		.uleb128 0x49
 1974 00d2 13       		.uleb128 0x13
 1975 00d3 02       		.uleb128 0x2
 1976 00d4 18       		.uleb128 0x18
 1977 00d5 00       		.byte	0
 1978 00d6 00       		.byte	0
 1979 00d7 0D       		.uleb128 0xd
 1980 00d8 2E       		.uleb128 0x2e
 1981 00d9 01       		.byte	0x1
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 56


 1982 00da 3F       		.uleb128 0x3f
 1983 00db 19       		.uleb128 0x19
 1984 00dc 03       		.uleb128 0x3
 1985 00dd 0E       		.uleb128 0xe
 1986 00de 3A       		.uleb128 0x3a
 1987 00df 0B       		.uleb128 0xb
 1988 00e0 3B       		.uleb128 0x3b
 1989 00e1 05       		.uleb128 0x5
 1990 00e2 27       		.uleb128 0x27
 1991 00e3 19       		.uleb128 0x19
 1992 00e4 49       		.uleb128 0x49
 1993 00e5 13       		.uleb128 0x13
 1994 00e6 11       		.uleb128 0x11
 1995 00e7 01       		.uleb128 0x1
 1996 00e8 12       		.uleb128 0x12
 1997 00e9 06       		.uleb128 0x6
 1998 00ea 40       		.uleb128 0x40
 1999 00eb 18       		.uleb128 0x18
 2000 00ec 9742     		.uleb128 0x2117
 2001 00ee 19       		.uleb128 0x19
 2002 00ef 01       		.uleb128 0x1
 2003 00f0 13       		.uleb128 0x13
 2004 00f1 00       		.byte	0
 2005 00f2 00       		.byte	0
 2006 00f3 0E       		.uleb128 0xe
 2007 00f4 34       		.uleb128 0x34
 2008 00f5 00       		.byte	0
 2009 00f6 03       		.uleb128 0x3
 2010 00f7 0E       		.uleb128 0xe
 2011 00f8 3A       		.uleb128 0x3a
 2012 00f9 0B       		.uleb128 0xb
 2013 00fa 3B       		.uleb128 0x3b
 2014 00fb 05       		.uleb128 0x5
 2015 00fc 49       		.uleb128 0x49
 2016 00fd 13       		.uleb128 0x13
 2017 00fe 02       		.uleb128 0x2
 2018 00ff 18       		.uleb128 0x18
 2019 0100 00       		.byte	0
 2020 0101 00       		.byte	0
 2021 0102 0F       		.uleb128 0xf
 2022 0103 2E       		.uleb128 0x2e
 2023 0104 01       		.byte	0x1
 2024 0105 3F       		.uleb128 0x3f
 2025 0106 19       		.uleb128 0x19
 2026 0107 03       		.uleb128 0x3
 2027 0108 0E       		.uleb128 0xe
 2028 0109 3A       		.uleb128 0x3a
 2029 010a 0B       		.uleb128 0xb
 2030 010b 3B       		.uleb128 0x3b
 2031 010c 05       		.uleb128 0x5
 2032 010d 27       		.uleb128 0x27
 2033 010e 19       		.uleb128 0x19
 2034 010f 11       		.uleb128 0x11
 2035 0110 01       		.uleb128 0x1
 2036 0111 12       		.uleb128 0x12
 2037 0112 06       		.uleb128 0x6
 2038 0113 40       		.uleb128 0x40
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 57


 2039 0114 18       		.uleb128 0x18
 2040 0115 9642     		.uleb128 0x2116
 2041 0117 19       		.uleb128 0x19
 2042 0118 01       		.uleb128 0x1
 2043 0119 13       		.uleb128 0x13
 2044 011a 00       		.byte	0
 2045 011b 00       		.byte	0
 2046 011c 10       		.uleb128 0x10
 2047 011d 0F       		.uleb128 0xf
 2048 011e 00       		.byte	0
 2049 011f 0B       		.uleb128 0xb
 2050 0120 0B       		.uleb128 0xb
 2051 0121 49       		.uleb128 0x49
 2052 0122 13       		.uleb128 0x13
 2053 0123 00       		.byte	0
 2054 0124 00       		.byte	0
 2055 0125 11       		.uleb128 0x11
 2056 0126 26       		.uleb128 0x26
 2057 0127 00       		.byte	0
 2058 0128 49       		.uleb128 0x49
 2059 0129 13       		.uleb128 0x13
 2060 012a 00       		.byte	0
 2061 012b 00       		.byte	0
 2062 012c 12       		.uleb128 0x12
 2063 012d 2E       		.uleb128 0x2e
 2064 012e 00       		.byte	0
 2065 012f 3F       		.uleb128 0x3f
 2066 0130 19       		.uleb128 0x19
 2067 0131 03       		.uleb128 0x3
 2068 0132 0E       		.uleb128 0xe
 2069 0133 3A       		.uleb128 0x3a
 2070 0134 0B       		.uleb128 0xb
 2071 0135 3B       		.uleb128 0x3b
 2072 0136 05       		.uleb128 0x5
 2073 0137 27       		.uleb128 0x27
 2074 0138 19       		.uleb128 0x19
 2075 0139 11       		.uleb128 0x11
 2076 013a 01       		.uleb128 0x1
 2077 013b 12       		.uleb128 0x12
 2078 013c 06       		.uleb128 0x6
 2079 013d 40       		.uleb128 0x40
 2080 013e 18       		.uleb128 0x18
 2081 013f 9642     		.uleb128 0x2116
 2082 0141 19       		.uleb128 0x19
 2083 0142 00       		.byte	0
 2084 0143 00       		.byte	0
 2085 0144 13       		.uleb128 0x13
 2086 0145 34       		.uleb128 0x34
 2087 0146 00       		.byte	0
 2088 0147 03       		.uleb128 0x3
 2089 0148 0E       		.uleb128 0xe
 2090 0149 3A       		.uleb128 0x3a
 2091 014a 0B       		.uleb128 0xb
 2092 014b 3B       		.uleb128 0x3b
 2093 014c 0B       		.uleb128 0xb
 2094 014d 49       		.uleb128 0x49
 2095 014e 13       		.uleb128 0x13
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 58


 2096 014f 3F       		.uleb128 0x3f
 2097 0150 19       		.uleb128 0x19
 2098 0151 02       		.uleb128 0x2
 2099 0152 18       		.uleb128 0x18
 2100 0153 00       		.byte	0
 2101 0154 00       		.byte	0
 2102 0155 00       		.byte	0
 2103              		.section	.debug_aranges,"",%progbits
 2104 0000 E4000000 		.4byte	0xe4
 2105 0004 0200     		.2byte	0x2
 2106 0006 00000000 		.4byte	.Ldebug_info0
 2107 000a 04       		.byte	0x4
 2108 000b 00       		.byte	0
 2109 000c 0000     		.2byte	0
 2110 000e 0000     		.2byte	0
 2111 0010 00000000 		.4byte	.LFB0
 2112 0014 34000000 		.4byte	.LFE0-.LFB0
 2113 0018 00000000 		.4byte	.LFB1
 2114 001c 68000000 		.4byte	.LFE1-.LFB1
 2115 0020 00000000 		.4byte	.LFB2
 2116 0024 24000000 		.4byte	.LFE2-.LFB2
 2117 0028 00000000 		.4byte	.LFB3
 2118 002c 54000000 		.4byte	.LFE3-.LFB3
 2119 0030 00000000 		.4byte	.LFB4
 2120 0034 0C000000 		.4byte	.LFE4-.LFB4
 2121 0038 00000000 		.4byte	.LFB5
 2122 003c 0C000000 		.4byte	.LFE5-.LFB5
 2123 0040 00000000 		.4byte	.LFB6
 2124 0044 0C000000 		.4byte	.LFE6-.LFB6
 2125 0048 00000000 		.4byte	.LFB7
 2126 004c 0C000000 		.4byte	.LFE7-.LFB7
 2127 0050 00000000 		.4byte	.LFB8
 2128 0054 20000000 		.4byte	.LFE8-.LFB8
 2129 0058 00000000 		.4byte	.LFB9
 2130 005c 20000000 		.4byte	.LFE9-.LFB9
 2131 0060 00000000 		.4byte	.LFB10
 2132 0064 1C000000 		.4byte	.LFE10-.LFB10
 2133 0068 00000000 		.4byte	.LFB11
 2134 006c 1C000000 		.4byte	.LFE11-.LFB11
 2135 0070 00000000 		.4byte	.LFB12
 2136 0074 34000000 		.4byte	.LFE12-.LFB12
 2137 0078 00000000 		.4byte	.LFB13
 2138 007c 1C000000 		.4byte	.LFE13-.LFB13
 2139 0080 00000000 		.4byte	.LFB14
 2140 0084 2C000000 		.4byte	.LFE14-.LFB14
 2141 0088 00000000 		.4byte	.LFB15
 2142 008c 40000000 		.4byte	.LFE15-.LFB15
 2143 0090 00000000 		.4byte	.LFB16
 2144 0094 28000000 		.4byte	.LFE16-.LFB16
 2145 0098 00000000 		.4byte	.LFB17
 2146 009c 44000000 		.4byte	.LFE17-.LFB17
 2147 00a0 00000000 		.4byte	.LFB18
 2148 00a4 20000000 		.4byte	.LFE18-.LFB18
 2149 00a8 00000000 		.4byte	.LFB19
 2150 00ac 20000000 		.4byte	.LFE19-.LFB19
 2151 00b0 00000000 		.4byte	.LFB20
 2152 00b4 3A000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 59


 2153 00b8 00000000 		.4byte	.LFB21
 2154 00bc 60000000 		.4byte	.LFE21-.LFB21
 2155 00c0 00000000 		.4byte	.LFB22
 2156 00c4 10000000 		.4byte	.LFE22-.LFB22
 2157 00c8 00000000 		.4byte	.LFB23
 2158 00cc 10000000 		.4byte	.LFE23-.LFB23
 2159 00d0 00000000 		.4byte	.LFB24
 2160 00d4 30000000 		.4byte	.LFE24-.LFB24
 2161 00d8 00000000 		.4byte	.LFB25
 2162 00dc 34000000 		.4byte	.LFE25-.LFB25
 2163 00e0 00000000 		.4byte	0
 2164 00e4 00000000 		.4byte	0
 2165              		.section	.debug_ranges,"",%progbits
 2166              	.Ldebug_ranges0:
 2167 0000 00000000 		.4byte	.LFB0
 2168 0004 34000000 		.4byte	.LFE0
 2169 0008 00000000 		.4byte	.LFB1
 2170 000c 68000000 		.4byte	.LFE1
 2171 0010 00000000 		.4byte	.LFB2
 2172 0014 24000000 		.4byte	.LFE2
 2173 0018 00000000 		.4byte	.LFB3
 2174 001c 54000000 		.4byte	.LFE3
 2175 0020 00000000 		.4byte	.LFB4
 2176 0024 0C000000 		.4byte	.LFE4
 2177 0028 00000000 		.4byte	.LFB5
 2178 002c 0C000000 		.4byte	.LFE5
 2179 0030 00000000 		.4byte	.LFB6
 2180 0034 0C000000 		.4byte	.LFE6
 2181 0038 00000000 		.4byte	.LFB7
 2182 003c 0C000000 		.4byte	.LFE7
 2183 0040 00000000 		.4byte	.LFB8
 2184 0044 20000000 		.4byte	.LFE8
 2185 0048 00000000 		.4byte	.LFB9
 2186 004c 20000000 		.4byte	.LFE9
 2187 0050 00000000 		.4byte	.LFB10
 2188 0054 1C000000 		.4byte	.LFE10
 2189 0058 00000000 		.4byte	.LFB11
 2190 005c 1C000000 		.4byte	.LFE11
 2191 0060 00000000 		.4byte	.LFB12
 2192 0064 34000000 		.4byte	.LFE12
 2193 0068 00000000 		.4byte	.LFB13
 2194 006c 1C000000 		.4byte	.LFE13
 2195 0070 00000000 		.4byte	.LFB14
 2196 0074 2C000000 		.4byte	.LFE14
 2197 0078 00000000 		.4byte	.LFB15
 2198 007c 40000000 		.4byte	.LFE15
 2199 0080 00000000 		.4byte	.LFB16
 2200 0084 28000000 		.4byte	.LFE16
 2201 0088 00000000 		.4byte	.LFB17
 2202 008c 44000000 		.4byte	.LFE17
 2203 0090 00000000 		.4byte	.LFB18
 2204 0094 20000000 		.4byte	.LFE18
 2205 0098 00000000 		.4byte	.LFB19
 2206 009c 20000000 		.4byte	.LFE19
 2207 00a0 00000000 		.4byte	.LFB20
 2208 00a4 3A000000 		.4byte	.LFE20
 2209 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 60


 2210 00ac 60000000 		.4byte	.LFE21
 2211 00b0 00000000 		.4byte	.LFB22
 2212 00b4 10000000 		.4byte	.LFE22
 2213 00b8 00000000 		.4byte	.LFB23
 2214 00bc 10000000 		.4byte	.LFE23
 2215 00c0 00000000 		.4byte	.LFB24
 2216 00c4 30000000 		.4byte	.LFE24
 2217 00c8 00000000 		.4byte	.LFB25
 2218 00cc 34000000 		.4byte	.LFE25
 2219 00d0 00000000 		.4byte	0
 2220 00d4 00000000 		.4byte	0
 2221              		.section	.debug_line,"",%progbits
 2222              	.Ldebug_line0:
 2223 0000 84020000 		.section	.debug_str,"MS",%progbits,1
 2223      02004300 
 2223      00000201 
 2223      FB0E0D00 
 2223      01010101 
 2224              	.LASF54:
 2225 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2225      43313120 
 2225      352E342E 
 2225      31203230 
 2225      31363036 
 2226 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2226      20726576 
 2226      6973696F 
 2226      6E203233 
 2226      37373135 
 2227 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2227      66756E63 
 2227      74696F6E 
 2227      2D736563 
 2227      74696F6E 
 2228              	.LASF37:
 2229 008e 5350494D 		.ascii	"SPIM_1_GetTxBufferSize\000"
 2229      5F315F47 
 2229      65745478 
 2229      42756666 
 2229      65725369 
 2230              	.LASF17:
 2231 00a5 5350494D 		.ascii	"SPIM_1_Start\000"
 2231      5F315F53 
 2231      74617274 
 2231      00
 2232              	.LASF34:
 2233 00b2 72784461 		.ascii	"rxData\000"
 2233      746100
 2234              	.LASF18:
 2235 00b9 5350494D 		.ascii	"SPIM_1_Enable\000"
 2235      5F315F45 
 2235      6E61626C 
 2235      6500
 2236              	.LASF21:
 2237 00c7 5350494D 		.ascii	"SPIM_1_EnableTxInt\000"
 2237      5F315F45 
 2237      6E61626C 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 61


 2237      65547849 
 2237      6E7400
 2238              	.LASF39:
 2239 00da 5350494D 		.ascii	"SPIM_1_ClearTxBuffer\000"
 2239      5F315F43 
 2239      6C656172 
 2239      54784275 
 2239      66666572 
 2240              	.LASF3:
 2241 00ef 73686F72 		.ascii	"short unsigned int\000"
 2241      7420756E 
 2241      7369676E 
 2241      65642069 
 2241      6E7400
 2242              	.LASF8:
 2243 0102 756E7369 		.ascii	"unsigned int\000"
 2243      676E6564 
 2243      20696E74 
 2243      00
 2244              	.LASF32:
 2245 010f 74784461 		.ascii	"txData\000"
 2245      746100
 2246              	.LASF35:
 2247 0116 5350494D 		.ascii	"SPIM_1_GetRxBufferSize\000"
 2247      5F315F47 
 2247      65745278 
 2247      42756666 
 2247      65725369 
 2248              	.LASF25:
 2249 012d 5350494D 		.ascii	"SPIM_1_SetTxInterruptMode\000"
 2249      5F315F53 
 2249      65745478 
 2249      496E7465 
 2249      72727570 
 2250              	.LASF29:
 2251 0147 5350494D 		.ascii	"SPIM_1_ReadTxStatus\000"
 2251      5F315F52 
 2251      65616454 
 2251      78537461 
 2251      74757300 
 2252              	.LASF26:
 2253 015b 5350494D 		.ascii	"SPIM_1_SetRxInterruptMode\000"
 2253      5F315F53 
 2253      65745278 
 2253      496E7465 
 2253      72727570 
 2254              	.LASF51:
 2255 0175 5350494D 		.ascii	"SPIM_1_initVar\000"
 2255      5F315F69 
 2255      6E697456 
 2255      617200
 2256              	.LASF41:
 2257 0184 5350494D 		.ascii	"SPIM_1_TxDisable\000"
 2257      5F315F54 
 2257      78446973 
 2257      61626C65 
 2257      00
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 62


 2258              	.LASF36:
 2259 0195 73697A65 		.ascii	"size\000"
 2259      00
 2260              	.LASF13:
 2261 019a 72656738 		.ascii	"reg8\000"
 2261      00
 2262              	.LASF5:
 2263 019f 6C6F6E67 		.ascii	"long unsigned int\000"
 2263      20756E73 
 2263      69676E65 
 2263      6420696E 
 2263      7400
 2264              	.LASF12:
 2265 01b1 75696E74 		.ascii	"uint8\000"
 2265      3800
 2266              	.LASF47:
 2267 01b7 5350494D 		.ascii	"SPIM_1_EnableInt\000"
 2267      5F315F45 
 2267      6E61626C 
 2267      65496E74 
 2267      00
 2268              	.LASF20:
 2269 01c8 656E6162 		.ascii	"enableInterrupts\000"
 2269      6C65496E 
 2269      74657272 
 2269      75707473 
 2269      00
 2270              	.LASF1:
 2271 01d9 756E7369 		.ascii	"unsigned char\000"
 2271      676E6564 
 2271      20636861 
 2271      7200
 2272              	.LASF48:
 2273 01e7 5350494D 		.ascii	"SPIM_1_DisableInt\000"
 2273      5F315F44 
 2273      69736162 
 2273      6C65496E 
 2273      7400
 2274              	.LASF10:
 2275 01f9 646F7562 		.ascii	"double\000"
 2275      6C6500
 2276              	.LASF27:
 2277 0200 696E7453 		.ascii	"intSrc\000"
 2277      726300
 2278              	.LASF46:
 2279 0207 5350494D 		.ascii	"SPIM_1_ClearFIFO\000"
 2279      5F315F43 
 2279      6C656172 
 2279      4649464F 
 2279      00
 2280              	.LASF16:
 2281 0218 5350494D 		.ascii	"SPIM_1_Init\000"
 2281      5F315F49 
 2281      6E697400 
 2282              	.LASF42:
 2283 0224 5350494D 		.ascii	"SPIM_1_PutArray\000"
 2283      5F315F50 
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 63


 2283      75744172 
 2283      72617900 
 2284              	.LASF49:
 2285 0234 5350494D 		.ascii	"SPIM_1_SetInterruptMode\000"
 2285      5F315F53 
 2285      6574496E 
 2285      74657272 
 2285      7570744D 
 2286              	.LASF30:
 2287 024c 5350494D 		.ascii	"SPIM_1_ReadRxStatus\000"
 2287      5F315F52 
 2287      65616452 
 2287      78537461 
 2287      74757300 
 2288              	.LASF7:
 2289 0260 6C6F6E67 		.ascii	"long long unsigned int\000"
 2289      206C6F6E 
 2289      6720756E 
 2289      7369676E 
 2289      65642069 
 2290              	.LASF56:
 2291 0277 433A5C55 		.ascii	"C:\\Users\\Matthew\\Dropbox (MIT)\\Sophomore Spring"
 2291      73657273 
 2291      5C4D6174 
 2291      74686577 
 2291      5C44726F 
 2292 02a6 5C362E31 		.ascii	"\\6.115\\6.115-Labs\\project\\DVDAC_Example01\\DVDA"
 2292      31355C36 
 2292      2E313135 
 2292      2D4C6162 
 2292      735C7072 
 2293 02d4 435F4578 		.ascii	"C_Example01.cydsn\000"
 2293      616D706C 
 2293      6530312E 
 2293      63796473 
 2293      6E00
 2294              	.LASF44:
 2295 02e6 62797465 		.ascii	"byteCount\000"
 2295      436F756E 
 2295      7400
 2296              	.LASF22:
 2297 02f0 5350494D 		.ascii	"SPIM_1_EnableRxInt\000"
 2297      5F315F45 
 2297      6E61626C 
 2297      65527849 
 2297      6E7400
 2298              	.LASF45:
 2299 0303 62756649 		.ascii	"bufIndex\000"
 2299      6E646578 
 2299      00
 2300              	.LASF23:
 2301 030c 5350494D 		.ascii	"SPIM_1_DisableTxInt\000"
 2301      5F315F44 
 2301      69736162 
 2301      6C655478 
 2301      496E7400 
 2302              	.LASF50:
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 64


 2303 0320 5350494D 		.ascii	"SPIM_1_ReadStatus\000"
 2303      5F315F52 
 2303      65616453 
 2303      74617475 
 2303      7300
 2304              	.LASF55:
 2305 0332 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIM_1.c\000"
 2305      72617465 
 2305      645F536F 
 2305      75726365 
 2305      5C50536F 
 2306              	.LASF15:
 2307 0352 73697A65 		.ascii	"sizetype\000"
 2307      74797065 
 2307      00
 2308              	.LASF6:
 2309 035b 6C6F6E67 		.ascii	"long long int\000"
 2309      206C6F6E 
 2309      6720696E 
 2309      7400
 2310              	.LASF9:
 2311 0369 666C6F61 		.ascii	"float\000"
 2311      7400
 2312              	.LASF11:
 2313 036f 63686172 		.ascii	"char\000"
 2313      00
 2314              	.LASF19:
 2315 0374 5350494D 		.ascii	"SPIM_1_Stop\000"
 2315      5F315F53 
 2315      746F7000 
 2316              	.LASF33:
 2317 0380 5350494D 		.ascii	"SPIM_1_ReadRxData\000"
 2317      5F315F52 
 2317      65616452 
 2317      78446174 
 2317      6100
 2318              	.LASF2:
 2319 0392 73686F72 		.ascii	"short int\000"
 2319      7420696E 
 2319      7400
 2320              	.LASF38:
 2321 039c 5350494D 		.ascii	"SPIM_1_ClearRxBuffer\000"
 2321      5F315F43 
 2321      6C656172 
 2321      52784275 
 2321      66666572 
 2322              	.LASF43:
 2323 03b1 62756666 		.ascii	"buffer\000"
 2323      657200
 2324              	.LASF53:
 2325 03b8 5350494D 		.ascii	"SPIM_1_swStatusRx\000"
 2325      5F315F73 
 2325      77537461 
 2325      74757352 
 2325      7800
 2326              	.LASF4:
 2327 03ca 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Matthew\AppData\Local\Temp\ccnheiFO.s 			page 65


 2327      20696E74 
 2327      00
 2328              	.LASF28:
 2329 03d3 746D7053 		.ascii	"tmpStatus\000"
 2329      74617475 
 2329      7300
 2330              	.LASF14:
 2331 03dd 6C6F6E67 		.ascii	"long double\000"
 2331      20646F75 
 2331      626C6500 
 2332              	.LASF52:
 2333 03e9 5350494D 		.ascii	"SPIM_1_swStatusTx\000"
 2333      5F315F73 
 2333      77537461 
 2333      74757354 
 2333      7800
 2334              	.LASF0:
 2335 03fb 7369676E 		.ascii	"signed char\000"
 2335      65642063 
 2335      68617200 
 2336              	.LASF31:
 2337 0407 5350494D 		.ascii	"SPIM_1_WriteTxData\000"
 2337      5F315F57 
 2337      72697465 
 2337      54784461 
 2337      746100
 2338              	.LASF24:
 2339 041a 5350494D 		.ascii	"SPIM_1_DisableRxInt\000"
 2339      5F315F44 
 2339      69736162 
 2339      6C655278 
 2339      496E7400 
 2340              	.LASF40:
 2341 042e 5350494D 		.ascii	"SPIM_1_TxEnable\000"
 2341      5F315F54 
 2341      78456E61 
 2341      626C6500 
 2342              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
